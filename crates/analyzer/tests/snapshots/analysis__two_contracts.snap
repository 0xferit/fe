---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(&db, module)"

---
note: 
  ┌─ two_contracts.fe:2:5
  │
2 │     other: Bar
  │     ^^^^^^^^^^ Bar

note: 
  ┌─ two_contracts.fe:7:5
  │  
7 │ ╭     pub fn foo(self) -> u256:
8 │ │         self.other.set_foo_addr(self.address)
9 │ │         return self.other.answer()
  │ ╰──────────────────────────────────^ attributes hash: 2875164910451995213
  │  
  = FunctionSignature {
        self_decl: Some(
            Mutable,
        ),
        params: [],
        return_type: Ok(
            Base(
                Numeric(
                    U256,
                ),
            ),
        ),
    }

note: 
  ┌─ two_contracts.fe:8:9
  │
8 │         self.other.set_foo_addr(self.address)
  │         ^^^^ Foo: Value

note: 
  ┌─ two_contracts.fe:8:9
  │
8 │         self.other.set_foo_addr(self.address)
  │         ^^^^^^^^^^              ^^^^ Foo: Value
  │         │                        
  │         Bar: Storage { nonce: Some(0) } => Value

note: 
  ┌─ two_contracts.fe:8:33
  │
8 │         self.other.set_foo_addr(self.address)
  │                                 ^^^^^^^^^^^^ address: Value

note: 
  ┌─ two_contracts.fe:8:9
  │
8 │         self.other.set_foo_addr(self.address)
  │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ (): Value
9 │         return self.other.answer()
  │                ^^^^ Foo: Value

note: 
  ┌─ two_contracts.fe:9:16
  │
9 │         return self.other.answer()
  │                ^^^^^^^^^^ Bar: Storage { nonce: Some(0) } => Value

note: 
  ┌─ two_contracts.fe:9:16
  │
9 │         return self.other.answer()
  │                ^^^^^^^^^^^^^^^^^^^ u256: Value

note: 
  ┌─ two_contracts.fe:8:9
  │
8 │         self.other.set_foo_addr(self.address)
  │         ^^^^^^^^^^^^^^^^^^^^^^^ External { contract: ContractId(1), function: FunctionId(3) }
9 │         return self.other.answer()
  │                ^^^^^^^^^^^^^^^^^ External { contract: ContractId(1), function: FunctionId(4) }

note: 
   ┌─ two_contracts.fe:11:5
   │  
11 │ ╭     pub fn add(x: u256, y: u256) -> u256:
12 │ │         return x + y
   │ ╰────────────────────^ attributes hash: 4022593831796629401
   │  
   = FunctionSignature {
         self_decl: None,
         params: [
             FunctionParam {
                 name: "x",
                 typ: Ok(
                     Base(
                         Numeric(
                             U256,
                         ),
                     ),
                 ),
             },
             FunctionParam {
                 name: "y",
                 typ: Ok(
                     Base(
                         Numeric(
                             U256,
                         ),
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Numeric(
                     U256,
                 ),
             ),
         ),
     }

note: 
   ┌─ two_contracts.fe:12:16
   │
12 │         return x + y
   │                ^   ^ u256: Value
   │                │    
   │                u256: Value

note: 
   ┌─ two_contracts.fe:12:16
   │
12 │         return x + y
   │                ^^^^^ u256: Value

note: 
   ┌─ two_contracts.fe:15:5
   │
15 │     other: Foo
   │     ^^^^^^^^^^ Foo

note: 
   ┌─ two_contracts.fe:17:5
   │  
17 │ ╭     pub fn set_foo_addr(self, addr: address):
18 │ │         self.other = Foo(addr)
   │ ╰──────────────────────────────^ attributes hash: 13016862792707996445
   │  
   = FunctionSignature {
         self_decl: Some(
             Mutable,
         ),
         params: [
             FunctionParam {
                 name: "addr",
                 typ: Ok(
                     Base(
                         Address,
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ two_contracts.fe:18:9
   │
18 │         self.other = Foo(addr)
   │         ^^^^ Bar: Value

note: 
   ┌─ two_contracts.fe:18:9
   │
18 │         self.other = Foo(addr)
   │         ^^^^^^^^^^       ^^^^ address: Value
   │         │                 
   │         Foo: Storage { nonce: Some(0) }

note: 
   ┌─ two_contracts.fe:18:22
   │
18 │         self.other = Foo(addr)
   │                      ^^^^^^^^^ Foo: Value

note: 
   ┌─ two_contracts.fe:18:22
   │
18 │         self.other = Foo(addr)
   │                      ^^^ TypeConstructor(Contract(Contract { name: "Foo", id: ContractId(0) }))

note: 
   ┌─ two_contracts.fe:20:5
   │  
20 │ ╭     pub fn answer(self) -> u256:
21 │ │         return self.other.add(20, 22)
   │ ╰─────────────────────────────────────^ attributes hash: 2875164910451995213
   │  
   = FunctionSignature {
         self_decl: Some(
             Mutable,
         ),
         params: [],
         return_type: Ok(
             Base(
                 Numeric(
                     U256,
                 ),
             ),
         ),
     }

note: 
   ┌─ two_contracts.fe:21:16
   │
21 │         return self.other.add(20, 22)
   │                ^^^^ Bar: Value

note: 
   ┌─ two_contracts.fe:21:16
   │
21 │         return self.other.add(20, 22)
   │                ^^^^^^^^^^     ^^  ^^ u256: Value
   │                │              │    
   │                │              u256: Value
   │                Foo: Storage { nonce: Some(0) } => Value

note: 
   ┌─ two_contracts.fe:21:16
   │
21 │         return self.other.add(20, 22)
   │                ^^^^^^^^^^^^^^^^^^^^^^ u256: Value

note: 
   ┌─ two_contracts.fe:21:16
   │
21 │         return self.other.add(20, 22)
   │                ^^^^^^^^^^^^^^ External { contract: ContractId(0), function: FunctionId(2) }


