---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(\"features/multi_param.fe\", &src, module, &db)"

---
note: 
  ┌─ features/multi_param.fe:2:5
  │  
2 │ ╭     pub fn bar(x: u256, y: u256, z: u256) -> u256[3]:
3 │ │         let my_array: u256[3]
4 │ │         my_array[0] = x
5 │ │         my_array[1] = y
6 │ │         my_array[2] = z
7 │ │         return my_array
  │ ╰───────────────────────^ attributes hash: 6824984156660016016
  │  
  = FunctionSignature {
        params: [
            FunctionParam {
                name: "x",
                typ: Ok(
                    Base(
                        Numeric(
                            U256,
                        ),
                    ),
                ),
            },
            FunctionParam {
                name: "y",
                typ: Ok(
                    Base(
                        Numeric(
                            U256,
                        ),
                    ),
                ),
            },
            FunctionParam {
                name: "z",
                typ: Ok(
                    Base(
                        Numeric(
                            U256,
                        ),
                    ),
                ),
            },
        ],
        return_type: Ok(
            Array(
                Array {
                    size: 3,
                    inner: Numeric(
                        U256,
                    ),
                },
            ),
        ),
    }

note: 
  ┌─ features/multi_param.fe:4:9
  │
4 │         my_array[0] = x
  │         ^^^^^^^^ u256[3]: Memory => None

note: 
  ┌─ features/multi_param.fe:4:18
  │
4 │         my_array[0] = x
  │                  ^ u256: Value => None

note: 
  ┌─ features/multi_param.fe:4:9
  │
4 │         my_array[0] = x
  │         ^^^^^^^^^^^ u256: Memory => None

note: 
  ┌─ features/multi_param.fe:4:23
  │
4 │         my_array[0] = x
  │                       ^ u256: Value => None

note: 
  ┌─ features/multi_param.fe:5:9
  │
5 │         my_array[1] = y
  │         ^^^^^^^^ u256[3]: Memory => None

note: 
  ┌─ features/multi_param.fe:5:18
  │
5 │         my_array[1] = y
  │                  ^ u256: Value => None

note: 
  ┌─ features/multi_param.fe:5:9
  │
5 │         my_array[1] = y
  │         ^^^^^^^^^^^ u256: Memory => None

note: 
  ┌─ features/multi_param.fe:5:23
  │
5 │         my_array[1] = y
  │                       ^ u256: Value => None

note: 
  ┌─ features/multi_param.fe:6:9
  │
6 │         my_array[2] = z
  │         ^^^^^^^^ u256[3]: Memory => None

note: 
  ┌─ features/multi_param.fe:6:18
  │
6 │         my_array[2] = z
  │                  ^ u256: Value => None

note: 
  ┌─ features/multi_param.fe:6:9
  │
6 │         my_array[2] = z
  │         ^^^^^^^^^^^ u256: Memory => None

note: 
  ┌─ features/multi_param.fe:6:23
  │
6 │         my_array[2] = z
  │                       ^ u256: Value => None

note: 
  ┌─ features/multi_param.fe:7:16
  │
7 │         return my_array
  │                ^^^^^^^^ u256[3]: Memory => None

note: 
  ┌─ features/multi_param.fe:3:23
  │
3 │         let my_array: u256[3]
  │                       ^^^^^^^ u256[3]


