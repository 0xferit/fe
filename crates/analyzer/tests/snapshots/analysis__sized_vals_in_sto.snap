---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(\"features/sized_vals_in_sto.fe\", &src, module, &db)"

---
note: 
  ┌─ features/sized_vals_in_sto.fe:2:5
  │
2 │     num: u256
  │     ^^^^^^^^^ u256

note: 
  ┌─ features/sized_vals_in_sto.fe:3:5
  │
3 │     nums: u256[42]
  │     ^^^^^^^^^^^^^^ u256[42]

note: 
  ┌─ features/sized_vals_in_sto.fe:4:5
  │
4 │     str: String<26>
  │     ^^^^^^^^^^^^^^^ String<26>

note: 
  ┌─ features/sized_vals_in_sto.fe:7:9
  │
7 │         num: u256
  │         ^^^^^^^^^ u256

note: 
  ┌─ features/sized_vals_in_sto.fe:8:9
  │
8 │         nums: u256[42]
  │         ^^^^^^^^^^^^^^ u256[42]

note: 
  ┌─ features/sized_vals_in_sto.fe:9:9
  │
9 │         str: String<26>
  │         ^^^^^^^^^^^^^^^ String<26>

note: 
   ┌─ features/sized_vals_in_sto.fe:11:5
   │  
11 │ ╭     pub fn write_num(x: u256):
12 │ │         self.num = x
   │ ╰────────────────────^ attributes hash: 5821943627655420089
   │  
   = FunctionSignature {
         params: [
             FunctionParam {
                 name: "x",
                 typ: Ok(
                     Base(
                         Numeric(
                             U256,
                         ),
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ features/sized_vals_in_sto.fe:14:5
   │  
14 │ ╭     pub fn read_num() -> u256:
15 │ │         return self.num
   │ ╰───────────────────────^ attributes hash: 4553090961241945225
   │  
   = FunctionSignature {
         params: [],
         return_type: Ok(
             Base(
                 Numeric(
                     U256,
                 ),
             ),
         ),
     }

note: 
   ┌─ features/sized_vals_in_sto.fe:17:5
   │  
17 │ ╭     pub fn write_nums(x: u256[42]):
18 │ │         self.nums = x
   │ ╰─────────────────────^ attributes hash: 7898033063999954658
   │  
   = FunctionSignature {
         params: [
             FunctionParam {
                 name: "x",
                 typ: Ok(
                     Array(
                         Array {
                             size: 42,
                             inner: Numeric(
                                 U256,
                             ),
                         },
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ features/sized_vals_in_sto.fe:20:5
   │  
20 │ ╭     pub fn read_nums() -> u256[42]:
21 │ │         return self.nums.to_mem()
   │ ╰─────────────────────────────────^ attributes hash: 14849843733783125097
   │  
   = FunctionSignature {
         params: [],
         return_type: Ok(
             Array(
                 Array {
                     size: 42,
                     inner: Numeric(
                         U256,
                     ),
                 },
             ),
         ),
     }

note: 
   ┌─ features/sized_vals_in_sto.fe:23:5
   │  
23 │ ╭     pub fn write_str(x: String<26>):
24 │ │         self.str = x
   │ ╰────────────────────^ attributes hash: 1291316915828296328
   │  
   = FunctionSignature {
         params: [
             FunctionParam {
                 name: "x",
                 typ: Ok(
                     String(
                         FeString {
                             max_size: 26,
                         },
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ features/sized_vals_in_sto.fe:26:5
   │  
26 │ ╭     pub fn read_str() -> String<26>:
27 │ │         return self.str.to_mem()
   │ ╰────────────────────────────────^ attributes hash: 8674728773228239240
   │  
   = FunctionSignature {
         params: [],
         return_type: Ok(
             String(
                 FeString {
                     max_size: 26,
                 },
             ),
         ),
     }

note: 
   ┌─ features/sized_vals_in_sto.fe:29:5
   │  
29 │ ╭     pub fn emit_event():
30 │ │         emit MyEvent(
31 │ │             num=self.num,
32 │ │             nums=self.nums.to_mem(),
33 │ │             str=self.str.to_mem()
34 │ │         )
   │ ╰─────────^ attributes hash: 17883060253504188551
   │  
   = FunctionSignature {
         params: [],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ features/sized_vals_in_sto.fe:12:9
   │
12 │         self.num = x
   │         ^^^^^^^^ u256: Storage { nonce: Some(0) } => None

note: 
   ┌─ features/sized_vals_in_sto.fe:12:20
   │
12 │         self.num = x
   │                    ^ u256: Value => None

note: 
   ┌─ features/sized_vals_in_sto.fe:15:16
   │
15 │         return self.num
   │                ^^^^^^^^ u256: Storage { nonce: Some(0) } => Some(Value)

note: 
   ┌─ features/sized_vals_in_sto.fe:18:9
   │
18 │         self.nums = x
   │         ^^^^^^^^^ u256[42]: Storage { nonce: Some(1) } => None

note: 
   ┌─ features/sized_vals_in_sto.fe:18:21
   │
18 │         self.nums = x
   │                     ^ u256[42]: Memory => None

note: 
   ┌─ features/sized_vals_in_sto.fe:21:16
   │
21 │         return self.nums.to_mem()
   │                ^^^^^^^^^ u256[42]: Storage { nonce: Some(1) } => None

note: 
   ┌─ features/sized_vals_in_sto.fe:21:16
   │
21 │         return self.nums.to_mem()
   │                ^^^^^^^^^^^^^^^^^^ u256[42]: Storage { nonce: Some(1) } => Some(Memory)

note: 
   ┌─ features/sized_vals_in_sto.fe:24:9
   │
24 │         self.str = x
   │         ^^^^^^^^ String<26>: Storage { nonce: Some(2) } => None

note: 
   ┌─ features/sized_vals_in_sto.fe:24:20
   │
24 │         self.str = x
   │                    ^ String<26>: Memory => None

note: 
   ┌─ features/sized_vals_in_sto.fe:27:16
   │
27 │         return self.str.to_mem()
   │                ^^^^^^^^ String<26>: Storage { nonce: Some(2) } => None

note: 
   ┌─ features/sized_vals_in_sto.fe:27:16
   │
27 │         return self.str.to_mem()
   │                ^^^^^^^^^^^^^^^^^ String<26>: Storage { nonce: Some(2) } => Some(Memory)

note: 
   ┌─ features/sized_vals_in_sto.fe:31:17
   │
31 │             num=self.num,
   │                 ^^^^^^^^ u256: Storage { nonce: Some(0) } => Some(Value)

note: 
   ┌─ features/sized_vals_in_sto.fe:32:18
   │
32 │             nums=self.nums.to_mem(),
   │                  ^^^^^^^^^ u256[42]: Storage { nonce: Some(1) } => None

note: 
   ┌─ features/sized_vals_in_sto.fe:32:18
   │
32 │             nums=self.nums.to_mem(),
   │                  ^^^^^^^^^^^^^^^^^^ u256[42]: Storage { nonce: Some(1) } => Some(Memory)

note: 
   ┌─ features/sized_vals_in_sto.fe:33:17
   │
33 │             str=self.str.to_mem()
   │                 ^^^^^^^^ String<26>: Storage { nonce: Some(2) } => None

note: 
   ┌─ features/sized_vals_in_sto.fe:33:17
   │
33 │             str=self.str.to_mem()
   │                 ^^^^^^^^^^^^^^^^^ String<26>: Storage { nonce: Some(2) } => Some(Memory)

note: 
   ┌─ features/sized_vals_in_sto.fe:30:9
   │  
30 │ ╭         emit MyEvent(
31 │ │             num=self.num,
32 │ │             nums=self.nums.to_mem(),
33 │ │             str=self.str.to_mem()
34 │ │         )
   │ ╰─────────^ attributes hash: 9998967556022527347
   │  
   = Event {
         name: "MyEvent",
         fields: [
             EventField {
                 name: "num",
                 typ: Ok(
                     Base(
                         Numeric(
                             U256,
                         ),
                     ),
                 ),
                 is_indexed: false,
             },
             EventField {
                 name: "nums",
                 typ: Ok(
                     Array(
                         Array {
                             size: 42,
                             inner: Numeric(
                                 U256,
                             ),
                         },
                     ),
                 ),
                 is_indexed: false,
             },
             EventField {
                 name: "str",
                 typ: Ok(
                     String(
                         FeString {
                             max_size: 26,
                         },
                     ),
                 ),
                 is_indexed: false,
             },
         ],
     }

note: 
   ┌─ features/sized_vals_in_sto.fe:21:16
   │
21 │         return self.nums.to_mem()
   │                ^^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
   │
   = ValueAttribute

note: 
   ┌─ features/sized_vals_in_sto.fe:27:16
   │
27 │         return self.str.to_mem()
   │                ^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
   │
   = ValueAttribute

note: 
   ┌─ features/sized_vals_in_sto.fe:32:18
   │
32 │             nums=self.nums.to_mem(),
   │                  ^^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
   │
   = ValueAttribute

note: 
   ┌─ features/sized_vals_in_sto.fe:33:17
   │
33 │             str=self.str.to_mem()
   │                 ^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
   │
   = ValueAttribute


