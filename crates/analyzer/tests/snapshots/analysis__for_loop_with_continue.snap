---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(&files, module, &db)"

---
note: 
   ┌─ features/for_loop_with_continue.fe:3:5
   │  
 3 │ ╭     pub fn bar() -> u256:
 4 │ │         let my_array: Array<u256, 5>
 5 │ │         my_array[0] = 2
 6 │ │         my_array[1] = 3
   · │
14 │ │             sum = sum + i
15 │ │         return sum
   │ ╰──────────────────^ attributes hash: 17979516652885443340
   │  
   = FunctionSignature {
         self_decl: None,
         params: [],
         return_type: Ok(
             Base(
                 Numeric(
                     U256,
                 ),
             ),
         ),
     }

note: 
   ┌─ features/for_loop_with_continue.fe:4:23
   │
 4 │         let my_array: Array<u256, 5>
   │                       ^^^^^^^^^^^^^^ Array<u256, 5>
   ·
10 │         let sum: u256 = 0
   │                  ^^^^ u256

note: 
  ┌─ features/for_loop_with_continue.fe:5:9
  │
5 │         my_array[0] = 2
  │         ^^^^^^^^ ^ u256: Value => None
  │         │         
  │         Array<u256, 5>: Memory => None

note: 
  ┌─ features/for_loop_with_continue.fe:5:9
  │
5 │         my_array[0] = 2
  │         ^^^^^^^^^^^   ^ u256: Value => None
  │         │              
  │         u256: Memory => None
6 │         my_array[1] = 3
  │         ^^^^^^^^ ^ u256: Value => None
  │         │         
  │         Array<u256, 5>: Memory => None

note: 
  ┌─ features/for_loop_with_continue.fe:6:9
  │
6 │         my_array[1] = 3
  │         ^^^^^^^^^^^   ^ u256: Value => None
  │         │              
  │         u256: Memory => None
7 │         my_array[2] = 5
  │         ^^^^^^^^ ^ u256: Value => None
  │         │         
  │         Array<u256, 5>: Memory => None

note: 
  ┌─ features/for_loop_with_continue.fe:7:9
  │
7 │         my_array[2] = 5
  │         ^^^^^^^^^^^   ^ u256: Value => None
  │         │              
  │         u256: Memory => None
8 │         my_array[3] = 6
  │         ^^^^^^^^ ^ u256: Value => None
  │         │         
  │         Array<u256, 5>: Memory => None

note: 
  ┌─ features/for_loop_with_continue.fe:8:9
  │
8 │         my_array[3] = 6
  │         ^^^^^^^^^^^   ^ u256: Value => None
  │         │              
  │         u256: Memory => None
9 │         my_array[4] = 9
  │         ^^^^^^^^ ^ u256: Value => None
  │         │         
  │         Array<u256, 5>: Memory => None

note: 
   ┌─ features/for_loop_with_continue.fe:9:9
   │
 9 │         my_array[4] = 9
   │         ^^^^^^^^^^^   ^ u256: Value => None
   │         │              
   │         u256: Memory => None
10 │         let sum: u256 = 0
   │                         ^ u256: Value => None
11 │         for i in my_array:
   │                  ^^^^^^^^ Array<u256, 5>: Memory => None
12 │             if i % 2 == 0:
   │                ^   ^ u256: Value => None
   │                │    
   │                u256: Value => None

note: 
   ┌─ features/for_loop_with_continue.fe:12:16
   │
12 │             if i % 2 == 0:
   │                ^^^^^    ^ u256: Value => None
   │                │         
   │                u256: Value => None

note: 
   ┌─ features/for_loop_with_continue.fe:12:16
   │
12 │             if i % 2 == 0:
   │                ^^^^^^^^^^ bool: Value => None
13 │                 continue
14 │             sum = sum + i
   │             ^^^   ^^^   ^ u256: Value => None
   │             │     │      
   │             │     u256: Value => None
   │             u256: Value => None

note: 
   ┌─ features/for_loop_with_continue.fe:14:19
   │
14 │             sum = sum + i
   │                   ^^^^^^^ u256: Value => None
15 │         return sum
   │                ^^^ u256: Value => None


