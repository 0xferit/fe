---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(\"features/u16_u16_map.fe\", &src, module, &db)"

---
note: 
  ┌─ features/u16_u16_map.fe:2:5
  │
2 │     bar: Map<u16, u16>
  │     ^^^^^^^^^^^^^^^^^^ Map<u16, u16>

note: 
  ┌─ features/u16_u16_map.fe:4:5
  │  
4 │ ╭     pub fn read_bar(self, key: u16) -> u16:
5 │ │         return self.bar[key]
  │ ╰────────────────────────────^ attributes hash: 9873798429331488760
  │  
  = FunctionSignature {
        self_decl: Some(
            Mutable,
        ),
        params: [
            FunctionParam {
                name: "key",
                typ: Ok(
                    Base(
                        Numeric(
                            U16,
                        ),
                    ),
                ),
            },
        ],
        return_type: Ok(
            Base(
                Numeric(
                    U16,
                ),
            ),
        ),
    }

note: 
  ┌─ features/u16_u16_map.fe:5:16
  │
5 │         return self.bar[key]
  │                ^^^^ Foo: Value

note: 
  ┌─ features/u16_u16_map.fe:5:16
  │
5 │         return self.bar[key]
  │                ^^^^^^^^ ^^^ u16: Value
  │                │         
  │                Map<u16, u16>: Storage { nonce: Some(0) }

note: 
  ┌─ features/u16_u16_map.fe:5:16
  │
5 │         return self.bar[key]
  │                ^^^^^^^^^^^^^ u16: Storage { nonce: None } => Value

note: 
  ┌─ features/u16_u16_map.fe:7:5
  │  
7 │ ╭     pub fn write_bar(self, key: u16, value: u16):
8 │ │         self.bar[key] = value
  │ ╰─────────────────────────────^ attributes hash: 6039485858219602437
  │  
  = FunctionSignature {
        self_decl: Some(
            Mutable,
        ),
        params: [
            FunctionParam {
                name: "key",
                typ: Ok(
                    Base(
                        Numeric(
                            U16,
                        ),
                    ),
                ),
            },
            FunctionParam {
                name: "value",
                typ: Ok(
                    Base(
                        Numeric(
                            U16,
                        ),
                    ),
                ),
            },
        ],
        return_type: Ok(
            Base(
                Unit,
            ),
        ),
    }

note: 
  ┌─ features/u16_u16_map.fe:8:9
  │
8 │         self.bar[key] = value
  │         ^^^^ Foo: Value

note: 
  ┌─ features/u16_u16_map.fe:8:9
  │
8 │         self.bar[key] = value
  │         ^^^^^^^^ ^^^ u16: Value
  │         │         
  │         Map<u16, u16>: Storage { nonce: Some(0) }

note: 
  ┌─ features/u16_u16_map.fe:8:9
  │
8 │         self.bar[key] = value
  │         ^^^^^^^^^^^^^   ^^^^^ u16: Value
  │         │                
  │         u16: Storage { nonce: None }


