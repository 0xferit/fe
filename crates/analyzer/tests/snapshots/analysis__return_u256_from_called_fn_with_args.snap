---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(\"features/return_u256_from_called_fn_with_args.fe\", &src,\n               module, &db)"

---
note: 
  ┌─ features/return_u256_from_called_fn_with_args.fe:2:5
  │
2 │     baz: Map<u256, u256>
  │     ^^^^^^^^^^^^^^^^^^^^ Map<u256, u256>

note: 
  ┌─ features/return_u256_from_called_fn_with_args.fe:3:5
  │  
3 │ ╭     pub fn foo(val1: u256, val2: u256, val3: u256, val4: u256, val5: u256) -> u256:
4 │ │         return val1 + val2 + val3 + val4 + val5
  │ ╰───────────────────────────────────────────────^ attributes hash: 4194611052461768296
  │  
  = FunctionSignature {
        params: [
            FunctionParam {
                name: "val1",
                typ: Ok(
                    Base(
                        Numeric(
                            U256,
                        ),
                    ),
                ),
            },
            FunctionParam {
                name: "val2",
                typ: Ok(
                    Base(
                        Numeric(
                            U256,
                        ),
                    ),
                ),
            },
            FunctionParam {
                name: "val3",
                typ: Ok(
                    Base(
                        Numeric(
                            U256,
                        ),
                    ),
                ),
            },
            FunctionParam {
                name: "val4",
                typ: Ok(
                    Base(
                        Numeric(
                            U256,
                        ),
                    ),
                ),
            },
            FunctionParam {
                name: "val5",
                typ: Ok(
                    Base(
                        Numeric(
                            U256,
                        ),
                    ),
                ),
            },
        ],
        return_type: Ok(
            Base(
                Numeric(
                    U256,
                ),
            ),
        ),
    }

note: 
  ┌─ features/return_u256_from_called_fn_with_args.fe:6:5
  │  
6 │ ╭     pub fn cem() -> u256:
7 │ │         return 100
  │ ╰──────────────────^ attributes hash: 4553090961241945225
  │  
  = FunctionSignature {
        params: [],
        return_type: Ok(
            Base(
                Numeric(
                    U256,
                ),
            ),
        ),
    }

note: 
   ┌─ features/return_u256_from_called_fn_with_args.fe:9:5
   │  
 9 │ ╭     pub fn bar() -> u256:
10 │ │         self.baz[0] = 43
11 │ │         return self.foo(5, 2, self.cem(), 25 + 25, self.baz[0])
   │ ╰───────────────────────────────────────────────────────────────^ attributes hash: 4553090961241945225
   │  
   = FunctionSignature {
         params: [],
         return_type: Ok(
             Base(
                 Numeric(
                     U256,
                 ),
             ),
         ),
     }

note: 
  ┌─ features/return_u256_from_called_fn_with_args.fe:4:16
  │
4 │         return val1 + val2 + val3 + val4 + val5
  │                ^^^^ u256: Value => None

note: 
  ┌─ features/return_u256_from_called_fn_with_args.fe:4:23
  │
4 │         return val1 + val2 + val3 + val4 + val5
  │                       ^^^^ u256: Value => None

note: 
  ┌─ features/return_u256_from_called_fn_with_args.fe:4:16
  │
4 │         return val1 + val2 + val3 + val4 + val5
  │                ^^^^^^^^^^^ u256: Value => None

note: 
  ┌─ features/return_u256_from_called_fn_with_args.fe:4:30
  │
4 │         return val1 + val2 + val3 + val4 + val5
  │                              ^^^^ u256: Value => None

note: 
  ┌─ features/return_u256_from_called_fn_with_args.fe:4:16
  │
4 │         return val1 + val2 + val3 + val4 + val5
  │                ^^^^^^^^^^^^^^^^^^ u256: Value => None

note: 
  ┌─ features/return_u256_from_called_fn_with_args.fe:4:37
  │
4 │         return val1 + val2 + val3 + val4 + val5
  │                                     ^^^^ u256: Value => None

note: 
  ┌─ features/return_u256_from_called_fn_with_args.fe:4:16
  │
4 │         return val1 + val2 + val3 + val4 + val5
  │                ^^^^^^^^^^^^^^^^^^^^^^^^^ u256: Value => None

note: 
  ┌─ features/return_u256_from_called_fn_with_args.fe:4:44
  │
4 │         return val1 + val2 + val3 + val4 + val5
  │                                            ^^^^ u256: Value => None

note: 
  ┌─ features/return_u256_from_called_fn_with_args.fe:4:16
  │
4 │         return val1 + val2 + val3 + val4 + val5
  │                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ u256: Value => None

note: 
  ┌─ features/return_u256_from_called_fn_with_args.fe:7:16
  │
7 │         return 100
  │                ^^^ u256: Value => None

note: 
   ┌─ features/return_u256_from_called_fn_with_args.fe:10:9
   │
10 │         self.baz[0] = 43
   │         ^^^^^^^^ Map<u256, u256>: Storage { nonce: Some(0) } => None

note: 
   ┌─ features/return_u256_from_called_fn_with_args.fe:10:18
   │
10 │         self.baz[0] = 43
   │                  ^ u256: Value => None

note: 
   ┌─ features/return_u256_from_called_fn_with_args.fe:10:9
   │
10 │         self.baz[0] = 43
   │         ^^^^^^^^^^^ u256: Storage { nonce: None } => None

note: 
   ┌─ features/return_u256_from_called_fn_with_args.fe:10:23
   │
10 │         self.baz[0] = 43
   │                       ^^ u256: Value => None

note: 
   ┌─ features/return_u256_from_called_fn_with_args.fe:11:25
   │
11 │         return self.foo(5, 2, self.cem(), 25 + 25, self.baz[0])
   │                         ^ u256: Value => None

note: 
   ┌─ features/return_u256_from_called_fn_with_args.fe:11:28
   │
11 │         return self.foo(5, 2, self.cem(), 25 + 25, self.baz[0])
   │                            ^ u256: Value => None

note: 
   ┌─ features/return_u256_from_called_fn_with_args.fe:11:31
   │
11 │         return self.foo(5, 2, self.cem(), 25 + 25, self.baz[0])
   │                               ^^^^^^^^^^ u256: Value => None

note: 
   ┌─ features/return_u256_from_called_fn_with_args.fe:11:43
   │
11 │         return self.foo(5, 2, self.cem(), 25 + 25, self.baz[0])
   │                                           ^^ u256: Value => None

note: 
   ┌─ features/return_u256_from_called_fn_with_args.fe:11:48
   │
11 │         return self.foo(5, 2, self.cem(), 25 + 25, self.baz[0])
   │                                                ^^ u256: Value => None

note: 
   ┌─ features/return_u256_from_called_fn_with_args.fe:11:43
   │
11 │         return self.foo(5, 2, self.cem(), 25 + 25, self.baz[0])
   │                                           ^^^^^^^ u256: Value => None

note: 
   ┌─ features/return_u256_from_called_fn_with_args.fe:11:52
   │
11 │         return self.foo(5, 2, self.cem(), 25 + 25, self.baz[0])
   │                                                    ^^^^^^^^ Map<u256, u256>: Storage { nonce: Some(0) } => None

note: 
   ┌─ features/return_u256_from_called_fn_with_args.fe:11:61
   │
11 │         return self.foo(5, 2, self.cem(), 25 + 25, self.baz[0])
   │                                                             ^ u256: Value => None

note: 
   ┌─ features/return_u256_from_called_fn_with_args.fe:11:52
   │
11 │         return self.foo(5, 2, self.cem(), 25 + 25, self.baz[0])
   │                                                    ^^^^^^^^^^^ u256: Storage { nonce: None } => Some(Value)

note: 
   ┌─ features/return_u256_from_called_fn_with_args.fe:11:16
   │
11 │         return self.foo(5, 2, self.cem(), 25 + 25, self.baz[0])
   │                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ u256: Value => None

note: 
   ┌─ features/return_u256_from_called_fn_with_args.fe:11:16
   │
11 │         return self.foo(5, 2, self.cem(), 25 + 25, self.baz[0])
   │                ^^^^^^^^ attributes hash: 5290763145657400289
   │
   = SelfAttribute {
         func_name: "foo",
     }

note: 
   ┌─ features/return_u256_from_called_fn_with_args.fe:11:31
   │
11 │         return self.foo(5, 2, self.cem(), 25 + 25, self.baz[0])
   │                               ^^^^^^^^ attributes hash: 15959357109795915945
   │
   = SelfAttribute {
         func_name: "cem",
     }


