---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(\"demos/erc20_token.fe\", &src, module, &db)"

---
note: 
  ┌─ demos/erc20_token.fe:2:5
  │
2 │     _balances: Map<address, u256>
  │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Map<address, u256>

note: 
  ┌─ demos/erc20_token.fe:3:5
  │
3 │     _allowances: Map<address, Map<address, u256>>
  │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Map<address, Map<address, u256>>

note: 
  ┌─ demos/erc20_token.fe:5:5
  │
5 │     _total_supply: u256
  │     ^^^^^^^^^^^^^^^^^^^ u256

note: 
  ┌─ demos/erc20_token.fe:7:5
  │
7 │     _name: String<100>
  │     ^^^^^^^^^^^^^^^^^^ String<100>

note: 
  ┌─ demos/erc20_token.fe:8:5
  │
8 │     _symbol: String<100>
  │     ^^^^^^^^^^^^^^^^^^^^ String<100>

note: 
  ┌─ demos/erc20_token.fe:9:5
  │
9 │     _decimals: u8
  │     ^^^^^^^^^^^^^ u8

note: 
   ┌─ demos/erc20_token.fe:12:9
   │
12 │         idx owner: address
   │         ^^^^^^^^^^^^^^^^^^ address

note: 
   ┌─ demos/erc20_token.fe:13:9
   │
13 │         idx spender: address
   │         ^^^^^^^^^^^^^^^^^^^^ address

note: 
   ┌─ demos/erc20_token.fe:14:9
   │
14 │         value: u256
   │         ^^^^^^^^^^^ u256

note: 
   ┌─ demos/erc20_token.fe:17:9
   │
17 │         idx from: address
   │         ^^^^^^^^^^^^^^^^^ address

note: 
   ┌─ demos/erc20_token.fe:18:9
   │
18 │         idx to: address
   │         ^^^^^^^^^^^^^^^ address

note: 
   ┌─ demos/erc20_token.fe:19:9
   │
19 │         value: u256
   │         ^^^^^^^^^^^ u256

note: 
   ┌─ demos/erc20_token.fe:21:5
   │  
21 │ ╭     pub fn __init__(name: String<100>, symbol: String<100>):
22 │ │         self._name = name
23 │ │         self._symbol = symbol
24 │ │         self._decimals = u8(18)
25 │ │         self._mint(msg.sender, 1000000000000000000000000)
   │ ╰─────────────────────────────────────────────────────────^ attributes hash: 3273606564690912097
   │  
   = FunctionSignature {
         params: [
             FunctionParam {
                 name: "name",
                 typ: Ok(
                     String(
                         FeString {
                             max_size: 100,
                         },
                     ),
                 ),
             },
             FunctionParam {
                 name: "symbol",
                 typ: Ok(
                     String(
                         FeString {
                             max_size: 100,
                         },
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ demos/erc20_token.fe:27:5
   │  
27 │ ╭     pub fn name() -> String<100>:
28 │ │         return self._name.to_mem()
   │ ╰──────────────────────────────────^ attributes hash: 547051866614494389
   │  
   = FunctionSignature {
         params: [],
         return_type: Ok(
             String(
                 FeString {
                     max_size: 100,
                 },
             ),
         ),
     }

note: 
   ┌─ demos/erc20_token.fe:30:5
   │  
30 │ ╭     pub fn symbol() -> String<100>:
31 │ │         return self._symbol.to_mem()
   │ ╰────────────────────────────────────^ attributes hash: 547051866614494389
   │  
   = FunctionSignature {
         params: [],
         return_type: Ok(
             String(
                 FeString {
                     max_size: 100,
                 },
             ),
         ),
     }

note: 
   ┌─ demos/erc20_token.fe:33:5
   │  
33 │ ╭     pub fn decimals() -> u8:
34 │ │         return self._decimals
   │ ╰─────────────────────────────^ attributes hash: 207849059327209983
   │  
   = FunctionSignature {
         params: [],
         return_type: Ok(
             Base(
                 Numeric(
                     U8,
                 ),
             ),
         ),
     }

note: 
   ┌─ demos/erc20_token.fe:36:5
   │  
36 │ ╭     pub fn totalSupply() -> u256:
37 │ │         return self._total_supply
   │ ╰─────────────────────────────────^ attributes hash: 4553090961241945225
   │  
   = FunctionSignature {
         params: [],
         return_type: Ok(
             Base(
                 Numeric(
                     U256,
                 ),
             ),
         ),
     }

note: 
   ┌─ demos/erc20_token.fe:39:5
   │  
39 │ ╭     pub fn balanceOf(account: address) -> u256:
40 │ │         return self._balances[account]
   │ ╰──────────────────────────────────────^ attributes hash: 3270716362116162777
   │  
   = FunctionSignature {
         params: [
             FunctionParam {
                 name: "account",
                 typ: Ok(
                     Base(
                         Address,
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Numeric(
                     U256,
                 ),
             ),
         ),
     }

note: 
   ┌─ demos/erc20_token.fe:42:5
   │  
42 │ ╭     pub fn transfer(recipient: address, value: u256) -> bool:
43 │ │         self._transfer(msg.sender, recipient, value)
44 │ │         return true
   │ ╰───────────────────^ attributes hash: 4820155873652504726
   │  
   = FunctionSignature {
         params: [
             FunctionParam {
                 name: "recipient",
                 typ: Ok(
                     Base(
                         Address,
                     ),
                 ),
             },
             FunctionParam {
                 name: "value",
                 typ: Ok(
                     Base(
                         Numeric(
                             U256,
                         ),
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Bool,
             ),
         ),
     }

note: 
   ┌─ demos/erc20_token.fe:46:5
   │  
46 │ ╭     pub fn allowance(owner: address, spender: address) -> u256:
47 │ │         return self._allowances[owner][spender]
   │ ╰───────────────────────────────────────────────^ attributes hash: 14386390033603643930
   │  
   = FunctionSignature {
         params: [
             FunctionParam {
                 name: "owner",
                 typ: Ok(
                     Base(
                         Address,
                     ),
                 ),
             },
             FunctionParam {
                 name: "spender",
                 typ: Ok(
                     Base(
                         Address,
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Numeric(
                     U256,
                 ),
             ),
         ),
     }

note: 
   ┌─ demos/erc20_token.fe:49:5
   │  
49 │ ╭     pub fn approve(spender: address, value: u256) -> bool:
50 │ │         self._approve(msg.sender, spender, value)
51 │ │         return true
   │ ╰───────────────────^ attributes hash: 11178591286876422786
   │  
   = FunctionSignature {
         params: [
             FunctionParam {
                 name: "spender",
                 typ: Ok(
                     Base(
                         Address,
                     ),
                 ),
             },
             FunctionParam {
                 name: "value",
                 typ: Ok(
                     Base(
                         Numeric(
                             U256,
                         ),
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Bool,
             ),
         ),
     }

note: 
   ┌─ demos/erc20_token.fe:53:5
   │  
53 │ ╭     pub fn transferFrom(sender: address, recipient: address, value: u256) -> bool:
54 │ │         assert self._allowances[sender][msg.sender] >= value
55 │ │ 
56 │ │         self._transfer(sender, recipient, value)
57 │ │         self._approve(sender, msg.sender, self._allowances[sender][msg.sender] - value)
58 │ │         return true
   │ ╰───────────────────^ attributes hash: 6064139117296579527
   │  
   = FunctionSignature {
         params: [
             FunctionParam {
                 name: "sender",
                 typ: Ok(
                     Base(
                         Address,
                     ),
                 ),
             },
             FunctionParam {
                 name: "recipient",
                 typ: Ok(
                     Base(
                         Address,
                     ),
                 ),
             },
             FunctionParam {
                 name: "value",
                 typ: Ok(
                     Base(
                         Numeric(
                             U256,
                         ),
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Bool,
             ),
         ),
     }

note: 
   ┌─ demos/erc20_token.fe:60:5
   │  
60 │ ╭     pub fn increaseAllowance(spender: address, addedValue: u256) -> bool:
61 │ │         self._approve(msg.sender, spender, self._allowances[msg.sender][spender] + addedValue)
62 │ │         return true
   │ ╰───────────────────^ attributes hash: 9683116214595794825
   │  
   = FunctionSignature {
         params: [
             FunctionParam {
                 name: "spender",
                 typ: Ok(
                     Base(
                         Address,
                     ),
                 ),
             },
             FunctionParam {
                 name: "addedValue",
                 typ: Ok(
                     Base(
                         Numeric(
                             U256,
                         ),
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Bool,
             ),
         ),
     }

note: 
   ┌─ demos/erc20_token.fe:64:5
   │  
64 │ ╭     pub fn decreaseAllowance(spender: address, subtractedValue: u256) -> bool:
65 │ │         self._approve(msg.sender, spender, self._allowances[msg.sender][spender] - subtractedValue)
66 │ │         return true
   │ ╰───────────────────^ attributes hash: 16344483445513373712
   │  
   = FunctionSignature {
         params: [
             FunctionParam {
                 name: "spender",
                 typ: Ok(
                     Base(
                         Address,
                     ),
                 ),
             },
             FunctionParam {
                 name: "subtractedValue",
                 typ: Ok(
                     Base(
                         Numeric(
                             U256,
                         ),
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Bool,
             ),
         ),
     }

note: 
   ┌─ demos/erc20_token.fe:68:5
   │  
68 │ ╭     fn _transfer(sender: address, recipient: address, value: u256):
69 │ │         assert sender != address(0)
70 │ │         assert recipient != address(0)
71 │ │ 
   · │
75 │ │         self._balances[recipient] = self._balances[recipient] + value
76 │ │         emit Transfer(from=sender, to=recipient, value=value)
   │ ╰─────────────────────────────────────────────────────────────^ attributes hash: 5319660245929540884
   │  
   = FunctionSignature {
         params: [
             FunctionParam {
                 name: "sender",
                 typ: Ok(
                     Base(
                         Address,
                     ),
                 ),
             },
             FunctionParam {
                 name: "recipient",
                 typ: Ok(
                     Base(
                         Address,
                     ),
                 ),
             },
             FunctionParam {
                 name: "value",
                 typ: Ok(
                     Base(
                         Numeric(
                             U256,
                         ),
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ demos/erc20_token.fe:78:5
   │  
78 │ ╭     fn _mint(account: address, value: u256):
79 │ │         assert account != address(0)
80 │ │ 
81 │ │         self._before_token_transfer(address(0), account, value)
   · │
84 │ │         self._balances[account] = self._balances[account] + value
85 │ │         emit Transfer(from=address(0), to=account, value=value)
   │ ╰───────────────────────────────────────────────────────────────^ attributes hash: 2703747865659945970
   │  
   = FunctionSignature {
         params: [
             FunctionParam {
                 name: "account",
                 typ: Ok(
                     Base(
                         Address,
                     ),
                 ),
             },
             FunctionParam {
                 name: "value",
                 typ: Ok(
                     Base(
                         Numeric(
                             U256,
                         ),
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ demos/erc20_token.fe:87:5
   │  
87 │ ╭     fn _burn(account: address, value: u256):
88 │ │         assert account != address(0)
89 │ │ 
90 │ │         self._before_token_transfer(account, address(0), value)
   · │
93 │ │         self._total_supply = self._total_supply - value
94 │ │         emit Transfer(from=account, to=address(0), value)
   │ ╰─────────────────────────────────────────────────────────^ attributes hash: 2703747865659945970
   │  
   = FunctionSignature {
         params: [
             FunctionParam {
                 name: "account",
                 typ: Ok(
                     Base(
                         Address,
                     ),
                 ),
             },
             FunctionParam {
                 name: "value",
                 typ: Ok(
                     Base(
                         Numeric(
                             U256,
                         ),
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
    ┌─ demos/erc20_token.fe:96:5
    │  
 96 │ ╭     fn _approve(owner: address, spender: address, value: u256):
 97 │ │         assert owner != address(0)
 98 │ │         assert spender != address(0)
 99 │ │ 
100 │ │         self._allowances[owner][spender] = value
101 │ │         emit Approval(owner, spender, value)
    │ ╰────────────────────────────────────────────^ attributes hash: 14201079106432958367
    │  
    = FunctionSignature {
          params: [
              FunctionParam {
                  name: "owner",
                  typ: Ok(
                      Base(
                          Address,
                      ),
                  ),
              },
              FunctionParam {
                  name: "spender",
                  typ: Ok(
                      Base(
                          Address,
                      ),
                  ),
              },
              FunctionParam {
                  name: "value",
                  typ: Ok(
                      Base(
                          Numeric(
                              U256,
                          ),
                      ),
                  ),
              },
          ],
          return_type: Ok(
              Base(
                  Unit,
              ),
          ),
      }

note: 
    ┌─ demos/erc20_token.fe:103:5
    │  
103 │ ╭     fn _setup_decimals(decimals_: u8):
104 │ │         self._decimals = decimals_
    │ ╰──────────────────────────────────^ attributes hash: 11792619442907068589
    │  
    = FunctionSignature {
          params: [
              FunctionParam {
                  name: "decimals_",
                  typ: Ok(
                      Base(
                          Numeric(
                              U8,
                          ),
                      ),
                  ),
              },
          ],
          return_type: Ok(
              Base(
                  Unit,
              ),
          ),
      }

note: 
    ┌─ demos/erc20_token.fe:106:5
    │  
106 │ ╭     fn _before_token_transfer(from: address, to: address, value: u256):
107 │ │         pass
    │ ╰────────────^ attributes hash: 15422594702274887655
    │  
    = FunctionSignature {
          params: [
              FunctionParam {
                  name: "from",
                  typ: Ok(
                      Base(
                          Address,
                      ),
                  ),
              },
              FunctionParam {
                  name: "to",
                  typ: Ok(
                      Base(
                          Address,
                      ),
                  ),
              },
              FunctionParam {
                  name: "value",
                  typ: Ok(
                      Base(
                          Numeric(
                              U256,
                          ),
                      ),
                  ),
              },
          ],
          return_type: Ok(
              Base(
                  Unit,
              ),
          ),
      }

note: 
   ┌─ demos/erc20_token.fe:22:9
   │
22 │         self._name = name
   │         ^^^^^^^^^^ String<100>: Storage { nonce: Some(3) } => None

note: 
   ┌─ demos/erc20_token.fe:22:22
   │
22 │         self._name = name
   │                      ^^^^ String<100>: Memory => None

note: 
   ┌─ demos/erc20_token.fe:23:9
   │
23 │         self._symbol = symbol
   │         ^^^^^^^^^^^^ String<100>: Storage { nonce: Some(4) } => None

note: 
   ┌─ demos/erc20_token.fe:23:24
   │
23 │         self._symbol = symbol
   │                        ^^^^^^ String<100>: Memory => None

note: 
   ┌─ demos/erc20_token.fe:24:9
   │
24 │         self._decimals = u8(18)
   │         ^^^^^^^^^^^^^^ u8: Storage { nonce: Some(5) } => None

note: 
   ┌─ demos/erc20_token.fe:24:29
   │
24 │         self._decimals = u8(18)
   │                             ^^ u8: Value => None

note: 
   ┌─ demos/erc20_token.fe:24:26
   │
24 │         self._decimals = u8(18)
   │                          ^^^^^^ u8: Value => None

note: 
   ┌─ demos/erc20_token.fe:25:20
   │
25 │         self._mint(msg.sender, 1000000000000000000000000)
   │                    ^^^^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:25:32
   │
25 │         self._mint(msg.sender, 1000000000000000000000000)
   │                                ^^^^^^^^^^^^^^^^^^^^^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:25:9
   │
25 │         self._mint(msg.sender, 1000000000000000000000000)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ (): Value => None

note: 
   ┌─ demos/erc20_token.fe:28:16
   │
28 │         return self._name.to_mem()
   │                ^^^^^^^^^^ String<100>: Storage { nonce: Some(3) } => None

note: 
   ┌─ demos/erc20_token.fe:28:16
   │
28 │         return self._name.to_mem()
   │                ^^^^^^^^^^^^^^^^^^^ String<100>: Storage { nonce: Some(3) } => Some(Memory)

note: 
   ┌─ demos/erc20_token.fe:31:16
   │
31 │         return self._symbol.to_mem()
   │                ^^^^^^^^^^^^ String<100>: Storage { nonce: Some(4) } => None

note: 
   ┌─ demos/erc20_token.fe:31:16
   │
31 │         return self._symbol.to_mem()
   │                ^^^^^^^^^^^^^^^^^^^^^ String<100>: Storage { nonce: Some(4) } => Some(Memory)

note: 
   ┌─ demos/erc20_token.fe:34:16
   │
34 │         return self._decimals
   │                ^^^^^^^^^^^^^^ u8: Storage { nonce: Some(5) } => Some(Value)

note: 
   ┌─ demos/erc20_token.fe:37:16
   │
37 │         return self._total_supply
   │                ^^^^^^^^^^^^^^^^^^ u256: Storage { nonce: Some(2) } => Some(Value)

note: 
   ┌─ demos/erc20_token.fe:40:16
   │
40 │         return self._balances[account]
   │                ^^^^^^^^^^^^^^ Map<address, u256>: Storage { nonce: Some(0) } => None

note: 
   ┌─ demos/erc20_token.fe:40:31
   │
40 │         return self._balances[account]
   │                               ^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:40:16
   │
40 │         return self._balances[account]
   │                ^^^^^^^^^^^^^^^^^^^^^^^ u256: Storage { nonce: None } => Some(Value)

note: 
   ┌─ demos/erc20_token.fe:43:24
   │
43 │         self._transfer(msg.sender, recipient, value)
   │                        ^^^^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:43:36
   │
43 │         self._transfer(msg.sender, recipient, value)
   │                                    ^^^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:43:47
   │
43 │         self._transfer(msg.sender, recipient, value)
   │                                               ^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:43:9
   │
43 │         self._transfer(msg.sender, recipient, value)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ (): Value => None

note: 
   ┌─ demos/erc20_token.fe:44:16
   │
44 │         return true
   │                ^^^^ bool: Value => None

note: 
   ┌─ demos/erc20_token.fe:47:16
   │
47 │         return self._allowances[owner][spender]
   │                ^^^^^^^^^^^^^^^^ Map<address, Map<address, u256>>: Storage { nonce: Some(1) } => None

note: 
   ┌─ demos/erc20_token.fe:47:33
   │
47 │         return self._allowances[owner][spender]
   │                                 ^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:47:16
   │
47 │         return self._allowances[owner][spender]
   │                ^^^^^^^^^^^^^^^^^^^^^^^ Map<address, u256>: Storage { nonce: None } => None

note: 
   ┌─ demos/erc20_token.fe:47:40
   │
47 │         return self._allowances[owner][spender]
   │                                        ^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:47:16
   │
47 │         return self._allowances[owner][spender]
   │                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ u256: Storage { nonce: None } => Some(Value)

note: 
   ┌─ demos/erc20_token.fe:50:23
   │
50 │         self._approve(msg.sender, spender, value)
   │                       ^^^^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:50:35
   │
50 │         self._approve(msg.sender, spender, value)
   │                                   ^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:50:44
   │
50 │         self._approve(msg.sender, spender, value)
   │                                            ^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:50:9
   │
50 │         self._approve(msg.sender, spender, value)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ (): Value => None

note: 
   ┌─ demos/erc20_token.fe:51:16
   │
51 │         return true
   │                ^^^^ bool: Value => None

note: 
   ┌─ demos/erc20_token.fe:54:16
   │
54 │         assert self._allowances[sender][msg.sender] >= value
   │                ^^^^^^^^^^^^^^^^ Map<address, Map<address, u256>>: Storage { nonce: Some(1) } => None

note: 
   ┌─ demos/erc20_token.fe:54:33
   │
54 │         assert self._allowances[sender][msg.sender] >= value
   │                                 ^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:54:16
   │
54 │         assert self._allowances[sender][msg.sender] >= value
   │                ^^^^^^^^^^^^^^^^^^^^^^^^ Map<address, u256>: Storage { nonce: None } => None

note: 
   ┌─ demos/erc20_token.fe:54:41
   │
54 │         assert self._allowances[sender][msg.sender] >= value
   │                                         ^^^^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:54:16
   │
54 │         assert self._allowances[sender][msg.sender] >= value
   │                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ u256: Storage { nonce: None } => Some(Value)

note: 
   ┌─ demos/erc20_token.fe:54:56
   │
54 │         assert self._allowances[sender][msg.sender] >= value
   │                                                        ^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:54:16
   │
54 │         assert self._allowances[sender][msg.sender] >= value
   │                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ bool: Value => None

note: 
   ┌─ demos/erc20_token.fe:56:24
   │
56 │         self._transfer(sender, recipient, value)
   │                        ^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:56:32
   │
56 │         self._transfer(sender, recipient, value)
   │                                ^^^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:56:43
   │
56 │         self._transfer(sender, recipient, value)
   │                                           ^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:56:9
   │
56 │         self._transfer(sender, recipient, value)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ (): Value => None

note: 
   ┌─ demos/erc20_token.fe:57:23
   │
57 │         self._approve(sender, msg.sender, self._allowances[sender][msg.sender] - value)
   │                       ^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:57:31
   │
57 │         self._approve(sender, msg.sender, self._allowances[sender][msg.sender] - value)
   │                               ^^^^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:57:43
   │
57 │         self._approve(sender, msg.sender, self._allowances[sender][msg.sender] - value)
   │                                           ^^^^^^^^^^^^^^^^ Map<address, Map<address, u256>>: Storage { nonce: Some(1) } => None

note: 
   ┌─ demos/erc20_token.fe:57:60
   │
57 │         self._approve(sender, msg.sender, self._allowances[sender][msg.sender] - value)
   │                                                            ^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:57:43
   │
57 │         self._approve(sender, msg.sender, self._allowances[sender][msg.sender] - value)
   │                                           ^^^^^^^^^^^^^^^^^^^^^^^^ Map<address, u256>: Storage { nonce: None } => None

note: 
   ┌─ demos/erc20_token.fe:57:68
   │
57 │         self._approve(sender, msg.sender, self._allowances[sender][msg.sender] - value)
   │                                                                    ^^^^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:57:43
   │
57 │         self._approve(sender, msg.sender, self._allowances[sender][msg.sender] - value)
   │                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ u256: Storage { nonce: None } => Some(Value)

note: 
   ┌─ demos/erc20_token.fe:57:82
   │
57 │         self._approve(sender, msg.sender, self._allowances[sender][msg.sender] - value)
   │                                                                                  ^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:57:43
   │
57 │         self._approve(sender, msg.sender, self._allowances[sender][msg.sender] - value)
   │                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:57:9
   │
57 │         self._approve(sender, msg.sender, self._allowances[sender][msg.sender] - value)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ (): Value => None

note: 
   ┌─ demos/erc20_token.fe:58:16
   │
58 │         return true
   │                ^^^^ bool: Value => None

note: 
   ┌─ demos/erc20_token.fe:61:23
   │
61 │         self._approve(msg.sender, spender, self._allowances[msg.sender][spender] + addedValue)
   │                       ^^^^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:61:35
   │
61 │         self._approve(msg.sender, spender, self._allowances[msg.sender][spender] + addedValue)
   │                                   ^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:61:44
   │
61 │         self._approve(msg.sender, spender, self._allowances[msg.sender][spender] + addedValue)
   │                                            ^^^^^^^^^^^^^^^^ Map<address, Map<address, u256>>: Storage { nonce: Some(1) } => None

note: 
   ┌─ demos/erc20_token.fe:61:61
   │
61 │         self._approve(msg.sender, spender, self._allowances[msg.sender][spender] + addedValue)
   │                                                             ^^^^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:61:44
   │
61 │         self._approve(msg.sender, spender, self._allowances[msg.sender][spender] + addedValue)
   │                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Map<address, u256>: Storage { nonce: None } => None

note: 
   ┌─ demos/erc20_token.fe:61:73
   │
61 │         self._approve(msg.sender, spender, self._allowances[msg.sender][spender] + addedValue)
   │                                                                         ^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:61:44
   │
61 │         self._approve(msg.sender, spender, self._allowances[msg.sender][spender] + addedValue)
   │                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ u256: Storage { nonce: None } => Some(Value)

note: 
   ┌─ demos/erc20_token.fe:61:84
   │
61 │         self._approve(msg.sender, spender, self._allowances[msg.sender][spender] + addedValue)
   │                                                                                    ^^^^^^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:61:44
   │
61 │         self._approve(msg.sender, spender, self._allowances[msg.sender][spender] + addedValue)
   │                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:61:9
   │
61 │         self._approve(msg.sender, spender, self._allowances[msg.sender][spender] + addedValue)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ (): Value => None

note: 
   ┌─ demos/erc20_token.fe:62:16
   │
62 │         return true
   │                ^^^^ bool: Value => None

note: 
   ┌─ demos/erc20_token.fe:65:23
   │
65 │         self._approve(msg.sender, spender, self._allowances[msg.sender][spender] - subtractedValue)
   │                       ^^^^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:65:35
   │
65 │         self._approve(msg.sender, spender, self._allowances[msg.sender][spender] - subtractedValue)
   │                                   ^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:65:44
   │
65 │         self._approve(msg.sender, spender, self._allowances[msg.sender][spender] - subtractedValue)
   │                                            ^^^^^^^^^^^^^^^^ Map<address, Map<address, u256>>: Storage { nonce: Some(1) } => None

note: 
   ┌─ demos/erc20_token.fe:65:61
   │
65 │         self._approve(msg.sender, spender, self._allowances[msg.sender][spender] - subtractedValue)
   │                                                             ^^^^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:65:44
   │
65 │         self._approve(msg.sender, spender, self._allowances[msg.sender][spender] - subtractedValue)
   │                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Map<address, u256>: Storage { nonce: None } => None

note: 
   ┌─ demos/erc20_token.fe:65:73
   │
65 │         self._approve(msg.sender, spender, self._allowances[msg.sender][spender] - subtractedValue)
   │                                                                         ^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:65:44
   │
65 │         self._approve(msg.sender, spender, self._allowances[msg.sender][spender] - subtractedValue)
   │                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ u256: Storage { nonce: None } => Some(Value)

note: 
   ┌─ demos/erc20_token.fe:65:84
   │
65 │         self._approve(msg.sender, spender, self._allowances[msg.sender][spender] - subtractedValue)
   │                                                                                    ^^^^^^^^^^^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:65:44
   │
65 │         self._approve(msg.sender, spender, self._allowances[msg.sender][spender] - subtractedValue)
   │                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:65:9
   │
65 │         self._approve(msg.sender, spender, self._allowances[msg.sender][spender] - subtractedValue)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ (): Value => None

note: 
   ┌─ demos/erc20_token.fe:66:16
   │
66 │         return true
   │                ^^^^ bool: Value => None

note: 
   ┌─ demos/erc20_token.fe:69:16
   │
69 │         assert sender != address(0)
   │                ^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:69:34
   │
69 │         assert sender != address(0)
   │                                  ^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:69:26
   │
69 │         assert sender != address(0)
   │                          ^^^^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:69:16
   │
69 │         assert sender != address(0)
   │                ^^^^^^^^^^^^^^^^^^^^ bool: Value => None

note: 
   ┌─ demos/erc20_token.fe:70:16
   │
70 │         assert recipient != address(0)
   │                ^^^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:70:37
   │
70 │         assert recipient != address(0)
   │                                     ^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:70:29
   │
70 │         assert recipient != address(0)
   │                             ^^^^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:70:16
   │
70 │         assert recipient != address(0)
   │                ^^^^^^^^^^^^^^^^^^^^^^^ bool: Value => None

note: 
   ┌─ demos/erc20_token.fe:72:37
   │
72 │         self._before_token_transfer(sender, recipient, value)
   │                                     ^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:72:45
   │
72 │         self._before_token_transfer(sender, recipient, value)
   │                                             ^^^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:72:56
   │
72 │         self._before_token_transfer(sender, recipient, value)
   │                                                        ^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:72:9
   │
72 │         self._before_token_transfer(sender, recipient, value)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ (): Value => None

note: 
   ┌─ demos/erc20_token.fe:74:9
   │
74 │         self._balances[sender] = self._balances[sender] - value
   │         ^^^^^^^^^^^^^^ Map<address, u256>: Storage { nonce: Some(0) } => None

note: 
   ┌─ demos/erc20_token.fe:74:24
   │
74 │         self._balances[sender] = self._balances[sender] - value
   │                        ^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:74:9
   │
74 │         self._balances[sender] = self._balances[sender] - value
   │         ^^^^^^^^^^^^^^^^^^^^^^ u256: Storage { nonce: None } => None

note: 
   ┌─ demos/erc20_token.fe:74:34
   │
74 │         self._balances[sender] = self._balances[sender] - value
   │                                  ^^^^^^^^^^^^^^ Map<address, u256>: Storage { nonce: Some(0) } => None

note: 
   ┌─ demos/erc20_token.fe:74:49
   │
74 │         self._balances[sender] = self._balances[sender] - value
   │                                                 ^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:74:34
   │
74 │         self._balances[sender] = self._balances[sender] - value
   │                                  ^^^^^^^^^^^^^^^^^^^^^^ u256: Storage { nonce: None } => Some(Value)

note: 
   ┌─ demos/erc20_token.fe:74:59
   │
74 │         self._balances[sender] = self._balances[sender] - value
   │                                                           ^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:74:34
   │
74 │         self._balances[sender] = self._balances[sender] - value
   │                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:75:9
   │
75 │         self._balances[recipient] = self._balances[recipient] + value
   │         ^^^^^^^^^^^^^^ Map<address, u256>: Storage { nonce: Some(0) } => None

note: 
   ┌─ demos/erc20_token.fe:75:24
   │
75 │         self._balances[recipient] = self._balances[recipient] + value
   │                        ^^^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:75:9
   │
75 │         self._balances[recipient] = self._balances[recipient] + value
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^ u256: Storage { nonce: None } => None

note: 
   ┌─ demos/erc20_token.fe:75:37
   │
75 │         self._balances[recipient] = self._balances[recipient] + value
   │                                     ^^^^^^^^^^^^^^ Map<address, u256>: Storage { nonce: Some(0) } => None

note: 
   ┌─ demos/erc20_token.fe:75:52
   │
75 │         self._balances[recipient] = self._balances[recipient] + value
   │                                                    ^^^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:75:37
   │
75 │         self._balances[recipient] = self._balances[recipient] + value
   │                                     ^^^^^^^^^^^^^^^^^^^^^^^^^ u256: Storage { nonce: None } => Some(Value)

note: 
   ┌─ demos/erc20_token.fe:75:65
   │
75 │         self._balances[recipient] = self._balances[recipient] + value
   │                                                                 ^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:75:37
   │
75 │         self._balances[recipient] = self._balances[recipient] + value
   │                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:76:28
   │
76 │         emit Transfer(from=sender, to=recipient, value=value)
   │                            ^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:76:39
   │
76 │         emit Transfer(from=sender, to=recipient, value=value)
   │                                       ^^^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:76:56
   │
76 │         emit Transfer(from=sender, to=recipient, value=value)
   │                                                        ^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:79:16
   │
79 │         assert account != address(0)
   │                ^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:79:35
   │
79 │         assert account != address(0)
   │                                   ^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:79:27
   │
79 │         assert account != address(0)
   │                           ^^^^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:79:16
   │
79 │         assert account != address(0)
   │                ^^^^^^^^^^^^^^^^^^^^^ bool: Value => None

note: 
   ┌─ demos/erc20_token.fe:81:45
   │
81 │         self._before_token_transfer(address(0), account, value)
   │                                             ^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:81:37
   │
81 │         self._before_token_transfer(address(0), account, value)
   │                                     ^^^^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:81:49
   │
81 │         self._before_token_transfer(address(0), account, value)
   │                                                 ^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:81:58
   │
81 │         self._before_token_transfer(address(0), account, value)
   │                                                          ^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:81:9
   │
81 │         self._before_token_transfer(address(0), account, value)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ (): Value => None

note: 
   ┌─ demos/erc20_token.fe:83:9
   │
83 │         self._total_supply = self._total_supply + value
   │         ^^^^^^^^^^^^^^^^^^ u256: Storage { nonce: Some(2) } => None

note: 
   ┌─ demos/erc20_token.fe:83:30
   │
83 │         self._total_supply = self._total_supply + value
   │                              ^^^^^^^^^^^^^^^^^^ u256: Storage { nonce: Some(2) } => Some(Value)

note: 
   ┌─ demos/erc20_token.fe:83:51
   │
83 │         self._total_supply = self._total_supply + value
   │                                                   ^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:83:30
   │
83 │         self._total_supply = self._total_supply + value
   │                              ^^^^^^^^^^^^^^^^^^^^^^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:84:9
   │
84 │         self._balances[account] = self._balances[account] + value
   │         ^^^^^^^^^^^^^^ Map<address, u256>: Storage { nonce: Some(0) } => None

note: 
   ┌─ demos/erc20_token.fe:84:24
   │
84 │         self._balances[account] = self._balances[account] + value
   │                        ^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:84:9
   │
84 │         self._balances[account] = self._balances[account] + value
   │         ^^^^^^^^^^^^^^^^^^^^^^^ u256: Storage { nonce: None } => None

note: 
   ┌─ demos/erc20_token.fe:84:35
   │
84 │         self._balances[account] = self._balances[account] + value
   │                                   ^^^^^^^^^^^^^^ Map<address, u256>: Storage { nonce: Some(0) } => None

note: 
   ┌─ demos/erc20_token.fe:84:50
   │
84 │         self._balances[account] = self._balances[account] + value
   │                                                  ^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:84:35
   │
84 │         self._balances[account] = self._balances[account] + value
   │                                   ^^^^^^^^^^^^^^^^^^^^^^^ u256: Storage { nonce: None } => Some(Value)

note: 
   ┌─ demos/erc20_token.fe:84:61
   │
84 │         self._balances[account] = self._balances[account] + value
   │                                                             ^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:84:35
   │
84 │         self._balances[account] = self._balances[account] + value
   │                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:85:36
   │
85 │         emit Transfer(from=address(0), to=account, value=value)
   │                                    ^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:85:28
   │
85 │         emit Transfer(from=address(0), to=account, value=value)
   │                            ^^^^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:85:43
   │
85 │         emit Transfer(from=address(0), to=account, value=value)
   │                                           ^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:85:58
   │
85 │         emit Transfer(from=address(0), to=account, value=value)
   │                                                          ^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:88:16
   │
88 │         assert account != address(0)
   │                ^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:88:35
   │
88 │         assert account != address(0)
   │                                   ^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:88:27
   │
88 │         assert account != address(0)
   │                           ^^^^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:88:16
   │
88 │         assert account != address(0)
   │                ^^^^^^^^^^^^^^^^^^^^^ bool: Value => None

note: 
   ┌─ demos/erc20_token.fe:90:37
   │
90 │         self._before_token_transfer(account, address(0), value)
   │                                     ^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:90:54
   │
90 │         self._before_token_transfer(account, address(0), value)
   │                                                      ^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:90:46
   │
90 │         self._before_token_transfer(account, address(0), value)
   │                                              ^^^^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:90:58
   │
90 │         self._before_token_transfer(account, address(0), value)
   │                                                          ^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:90:9
   │
90 │         self._before_token_transfer(account, address(0), value)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ (): Value => None

note: 
   ┌─ demos/erc20_token.fe:92:9
   │
92 │         self._balances[account] = self._balances[account] - value
   │         ^^^^^^^^^^^^^^ Map<address, u256>: Storage { nonce: Some(0) } => None

note: 
   ┌─ demos/erc20_token.fe:92:24
   │
92 │         self._balances[account] = self._balances[account] - value
   │                        ^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:92:9
   │
92 │         self._balances[account] = self._balances[account] - value
   │         ^^^^^^^^^^^^^^^^^^^^^^^ u256: Storage { nonce: None } => None

note: 
   ┌─ demos/erc20_token.fe:92:35
   │
92 │         self._balances[account] = self._balances[account] - value
   │                                   ^^^^^^^^^^^^^^ Map<address, u256>: Storage { nonce: Some(0) } => None

note: 
   ┌─ demos/erc20_token.fe:92:50
   │
92 │         self._balances[account] = self._balances[account] - value
   │                                                  ^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:92:35
   │
92 │         self._balances[account] = self._balances[account] - value
   │                                   ^^^^^^^^^^^^^^^^^^^^^^^ u256: Storage { nonce: None } => Some(Value)

note: 
   ┌─ demos/erc20_token.fe:92:61
   │
92 │         self._balances[account] = self._balances[account] - value
   │                                                             ^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:92:35
   │
92 │         self._balances[account] = self._balances[account] - value
   │                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:93:9
   │
93 │         self._total_supply = self._total_supply - value
   │         ^^^^^^^^^^^^^^^^^^ u256: Storage { nonce: Some(2) } => None

note: 
   ┌─ demos/erc20_token.fe:93:30
   │
93 │         self._total_supply = self._total_supply - value
   │                              ^^^^^^^^^^^^^^^^^^ u256: Storage { nonce: Some(2) } => Some(Value)

note: 
   ┌─ demos/erc20_token.fe:93:51
   │
93 │         self._total_supply = self._total_supply - value
   │                                                   ^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:93:30
   │
93 │         self._total_supply = self._total_supply - value
   │                              ^^^^^^^^^^^^^^^^^^^^^^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:94:28
   │
94 │         emit Transfer(from=account, to=address(0), value)
   │                            ^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:94:48
   │
94 │         emit Transfer(from=account, to=address(0), value)
   │                                                ^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:94:40
   │
94 │         emit Transfer(from=account, to=address(0), value)
   │                                        ^^^^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:94:52
   │
94 │         emit Transfer(from=account, to=address(0), value)
   │                                                    ^^^^^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:97:16
   │
97 │         assert owner != address(0)
   │                ^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:97:33
   │
97 │         assert owner != address(0)
   │                                 ^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:97:25
   │
97 │         assert owner != address(0)
   │                         ^^^^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:97:16
   │
97 │         assert owner != address(0)
   │                ^^^^^^^^^^^^^^^^^^^ bool: Value => None

note: 
   ┌─ demos/erc20_token.fe:98:16
   │
98 │         assert spender != address(0)
   │                ^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:98:35
   │
98 │         assert spender != address(0)
   │                                   ^ u256: Value => None

note: 
   ┌─ demos/erc20_token.fe:98:27
   │
98 │         assert spender != address(0)
   │                           ^^^^^^^^^^ address: Value => None

note: 
   ┌─ demos/erc20_token.fe:98:16
   │
98 │         assert spender != address(0)
   │                ^^^^^^^^^^^^^^^^^^^^^ bool: Value => None

note: 
    ┌─ demos/erc20_token.fe:100:9
    │
100 │         self._allowances[owner][spender] = value
    │         ^^^^^^^^^^^^^^^^ Map<address, Map<address, u256>>: Storage { nonce: Some(1) } => None

note: 
    ┌─ demos/erc20_token.fe:100:26
    │
100 │         self._allowances[owner][spender] = value
    │                          ^^^^^ address: Value => None

note: 
    ┌─ demos/erc20_token.fe:100:9
    │
100 │         self._allowances[owner][spender] = value
    │         ^^^^^^^^^^^^^^^^^^^^^^^ Map<address, u256>: Storage { nonce: None } => None

note: 
    ┌─ demos/erc20_token.fe:100:33
    │
100 │         self._allowances[owner][spender] = value
    │                                 ^^^^^^^ address: Value => None

note: 
    ┌─ demos/erc20_token.fe:100:9
    │
100 │         self._allowances[owner][spender] = value
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ u256: Storage { nonce: None } => None

note: 
    ┌─ demos/erc20_token.fe:100:44
    │
100 │         self._allowances[owner][spender] = value
    │                                            ^^^^^ u256: Value => None

note: 
    ┌─ demos/erc20_token.fe:101:23
    │
101 │         emit Approval(owner, spender, value)
    │                       ^^^^^ address: Value => None

note: 
    ┌─ demos/erc20_token.fe:101:30
    │
101 │         emit Approval(owner, spender, value)
    │                              ^^^^^^^ address: Value => None

note: 
    ┌─ demos/erc20_token.fe:101:39
    │
101 │         emit Approval(owner, spender, value)
    │                                       ^^^^^ u256: Value => None

note: 
    ┌─ demos/erc20_token.fe:104:9
    │
104 │         self._decimals = decimals_
    │         ^^^^^^^^^^^^^^ u8: Storage { nonce: Some(5) } => None

note: 
    ┌─ demos/erc20_token.fe:104:26
    │
104 │         self._decimals = decimals_
    │                          ^^^^^^^^^ u8: Value => None

note: 
   ┌─ demos/erc20_token.fe:76:9
   │
76 │         emit Transfer(from=sender, to=recipient, value=value)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 5533489995250141934
   │
   = Event {
         name: "Transfer",
         fields: [
             EventField {
                 name: "from",
                 typ: Ok(
                     Base(
                         Address,
                     ),
                 ),
                 is_indexed: true,
             },
             EventField {
                 name: "to",
                 typ: Ok(
                     Base(
                         Address,
                     ),
                 ),
                 is_indexed: true,
             },
             EventField {
                 name: "value",
                 typ: Ok(
                     Base(
                         Numeric(
                             U256,
                         ),
                     ),
                 ),
                 is_indexed: false,
             },
         ],
     }

note: 
   ┌─ demos/erc20_token.fe:85:9
   │
85 │         emit Transfer(from=address(0), to=account, value=value)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 5533489995250141934
   │
   = Event {
         name: "Transfer",
         fields: [
             EventField {
                 name: "from",
                 typ: Ok(
                     Base(
                         Address,
                     ),
                 ),
                 is_indexed: true,
             },
             EventField {
                 name: "to",
                 typ: Ok(
                     Base(
                         Address,
                     ),
                 ),
                 is_indexed: true,
             },
             EventField {
                 name: "value",
                 typ: Ok(
                     Base(
                         Numeric(
                             U256,
                         ),
                     ),
                 ),
                 is_indexed: false,
             },
         ],
     }

note: 
   ┌─ demos/erc20_token.fe:94:9
   │
94 │         emit Transfer(from=account, to=address(0), value)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 5533489995250141934
   │
   = Event {
         name: "Transfer",
         fields: [
             EventField {
                 name: "from",
                 typ: Ok(
                     Base(
                         Address,
                     ),
                 ),
                 is_indexed: true,
             },
             EventField {
                 name: "to",
                 typ: Ok(
                     Base(
                         Address,
                     ),
                 ),
                 is_indexed: true,
             },
             EventField {
                 name: "value",
                 typ: Ok(
                     Base(
                         Numeric(
                             U256,
                         ),
                     ),
                 ),
                 is_indexed: false,
             },
         ],
     }

note: 
    ┌─ demos/erc20_token.fe:101:9
    │
101 │         emit Approval(owner, spender, value)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 8893313742751514912
    │
    = Event {
          name: "Approval",
          fields: [
              EventField {
                  name: "owner",
                  typ: Ok(
                      Base(
                          Address,
                      ),
                  ),
                  is_indexed: true,
              },
              EventField {
                  name: "spender",
                  typ: Ok(
                      Base(
                          Address,
                      ),
                  ),
                  is_indexed: true,
              },
              EventField {
                  name: "value",
                  typ: Ok(
                      Base(
                          Numeric(
                              U256,
                          ),
                      ),
                  ),
                  is_indexed: false,
              },
          ],
      }

note: 
   ┌─ demos/erc20_token.fe:24:26
   │
24 │         self._decimals = u8(18)
   │                          ^^ attributes hash: 4311289215688173045
   │
   = TypeConstructor {
         typ: Base(
             Numeric(
                 U8,
             ),
         ),
     }

note: 
   ┌─ demos/erc20_token.fe:25:9
   │
25 │         self._mint(msg.sender, 1000000000000000000000000)
   │         ^^^^^^^^^^ attributes hash: 1155617642661253645
   │
   = SelfAttribute {
         func_name: "_mint",
     }

note: 
   ┌─ demos/erc20_token.fe:28:16
   │
28 │         return self._name.to_mem()
   │                ^^^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
   │
   = ValueAttribute

note: 
   ┌─ demos/erc20_token.fe:31:16
   │
31 │         return self._symbol.to_mem()
   │                ^^^^^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
   │
   = ValueAttribute

note: 
   ┌─ demos/erc20_token.fe:43:9
   │
43 │         self._transfer(msg.sender, recipient, value)
   │         ^^^^^^^^^^^^^^ attributes hash: 17554789810436603039
   │
   = SelfAttribute {
         func_name: "_transfer",
     }

note: 
   ┌─ demos/erc20_token.fe:50:9
   │
50 │         self._approve(msg.sender, spender, value)
   │         ^^^^^^^^^^^^^ attributes hash: 11653095055511118634
   │
   = SelfAttribute {
         func_name: "_approve",
     }

note: 
   ┌─ demos/erc20_token.fe:56:9
   │
56 │         self._transfer(sender, recipient, value)
   │         ^^^^^^^^^^^^^^ attributes hash: 17554789810436603039
   │
   = SelfAttribute {
         func_name: "_transfer",
     }

note: 
   ┌─ demos/erc20_token.fe:57:9
   │
57 │         self._approve(sender, msg.sender, self._allowances[sender][msg.sender] - value)
   │         ^^^^^^^^^^^^^ attributes hash: 11653095055511118634
   │
   = SelfAttribute {
         func_name: "_approve",
     }

note: 
   ┌─ demos/erc20_token.fe:61:9
   │
61 │         self._approve(msg.sender, spender, self._allowances[msg.sender][spender] + addedValue)
   │         ^^^^^^^^^^^^^ attributes hash: 11653095055511118634
   │
   = SelfAttribute {
         func_name: "_approve",
     }

note: 
   ┌─ demos/erc20_token.fe:65:9
   │
65 │         self._approve(msg.sender, spender, self._allowances[msg.sender][spender] - subtractedValue)
   │         ^^^^^^^^^^^^^ attributes hash: 11653095055511118634
   │
   = SelfAttribute {
         func_name: "_approve",
     }

note: 
   ┌─ demos/erc20_token.fe:69:26
   │
69 │         assert sender != address(0)
   │                          ^^^^^^^ attributes hash: 14203407709342965641
   │
   = TypeConstructor {
         typ: Base(
             Address,
         ),
     }

note: 
   ┌─ demos/erc20_token.fe:70:29
   │
70 │         assert recipient != address(0)
   │                             ^^^^^^^ attributes hash: 14203407709342965641
   │
   = TypeConstructor {
         typ: Base(
             Address,
         ),
     }

note: 
   ┌─ demos/erc20_token.fe:72:9
   │
72 │         self._before_token_transfer(sender, recipient, value)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 9533469367599954
   │
   = SelfAttribute {
         func_name: "_before_token_transfer",
     }

note: 
   ┌─ demos/erc20_token.fe:79:27
   │
79 │         assert account != address(0)
   │                           ^^^^^^^ attributes hash: 14203407709342965641
   │
   = TypeConstructor {
         typ: Base(
             Address,
         ),
     }

note: 
   ┌─ demos/erc20_token.fe:81:9
   │
81 │         self._before_token_transfer(address(0), account, value)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 9533469367599954
   │
   = SelfAttribute {
         func_name: "_before_token_transfer",
     }

note: 
   ┌─ demos/erc20_token.fe:81:37
   │
81 │         self._before_token_transfer(address(0), account, value)
   │                                     ^^^^^^^ attributes hash: 14203407709342965641
   │
   = TypeConstructor {
         typ: Base(
             Address,
         ),
     }

note: 
   ┌─ demos/erc20_token.fe:85:28
   │
85 │         emit Transfer(from=address(0), to=account, value=value)
   │                            ^^^^^^^ attributes hash: 14203407709342965641
   │
   = TypeConstructor {
         typ: Base(
             Address,
         ),
     }

note: 
   ┌─ demos/erc20_token.fe:88:27
   │
88 │         assert account != address(0)
   │                           ^^^^^^^ attributes hash: 14203407709342965641
   │
   = TypeConstructor {
         typ: Base(
             Address,
         ),
     }

note: 
   ┌─ demos/erc20_token.fe:90:9
   │
90 │         self._before_token_transfer(account, address(0), value)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 9533469367599954
   │
   = SelfAttribute {
         func_name: "_before_token_transfer",
     }

note: 
   ┌─ demos/erc20_token.fe:90:46
   │
90 │         self._before_token_transfer(account, address(0), value)
   │                                              ^^^^^^^ attributes hash: 14203407709342965641
   │
   = TypeConstructor {
         typ: Base(
             Address,
         ),
     }

note: 
   ┌─ demos/erc20_token.fe:94:40
   │
94 │         emit Transfer(from=account, to=address(0), value)
   │                                        ^^^^^^^ attributes hash: 14203407709342965641
   │
   = TypeConstructor {
         typ: Base(
             Address,
         ),
     }

note: 
   ┌─ demos/erc20_token.fe:97:25
   │
97 │         assert owner != address(0)
   │                         ^^^^^^^ attributes hash: 14203407709342965641
   │
   = TypeConstructor {
         typ: Base(
             Address,
         ),
     }

note: 
   ┌─ demos/erc20_token.fe:98:27
   │
98 │         assert spender != address(0)
   │                           ^^^^^^^ attributes hash: 14203407709342965641
   │
   = TypeConstructor {
         typ: Base(
             Address,
         ),
     }


