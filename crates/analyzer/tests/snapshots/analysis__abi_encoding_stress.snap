---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(\"stress/abi_encoding_stress.fe\", &src, module, &db)"

---
note: 
  ┌─ stress/abi_encoding_stress.fe:2:5
  │
2 │     my_num: u256
  │     ^^^^^^^^^^^^ u256

note: 
  ┌─ stress/abi_encoding_stress.fe:3:5
  │
3 │     my_num2: u8
  │     ^^^^^^^^^^^ u8

note: 
  ┌─ stress/abi_encoding_stress.fe:4:5
  │
4 │     my_bool: bool
  │     ^^^^^^^^^^^^^ bool

note: 
  ┌─ stress/abi_encoding_stress.fe:5:5
  │
5 │     my_addr: address
  │     ^^^^^^^^^^^^^^^^ address

note: 
  ┌─ stress/abi_encoding_stress.fe:8:5
  │
8 │     my_addrs: address[5]
  │     ^^^^^^^^^^^^^^^^^^^^ address[5]

note: 
  ┌─ stress/abi_encoding_stress.fe:9:5
  │
9 │     my_u128: u128
  │     ^^^^^^^^^^^^^ u128

note: 
   ┌─ stress/abi_encoding_stress.fe:10:5
   │
10 │     my_string: String<10>
   │     ^^^^^^^^^^^^^^^^^^^^^ String<10>

note: 
   ┌─ stress/abi_encoding_stress.fe:11:5
   │
11 │     my_u16s: u16[255]
   │     ^^^^^^^^^^^^^^^^^ u16[255]

note: 
   ┌─ stress/abi_encoding_stress.fe:12:5
   │
12 │     my_bool: bool
   │     ^^^^^^^^^^^^^ bool

note: 
   ┌─ stress/abi_encoding_stress.fe:13:5
   │
13 │     my_bytes: u8[100]
   │     ^^^^^^^^^^^^^^^^^ u8[100]

note: 
   ┌─ stress/abi_encoding_stress.fe:16:9
   │
16 │         my_addrs: address[5]
   │         ^^^^^^^^^^^^^^^^^^^^ address[5]

note: 
   ┌─ stress/abi_encoding_stress.fe:17:9
   │
17 │         my_u128: u128
   │         ^^^^^^^^^^^^^ u128

note: 
   ┌─ stress/abi_encoding_stress.fe:18:9
   │
18 │         my_string: String<10>
   │         ^^^^^^^^^^^^^^^^^^^^^ String<10>

note: 
   ┌─ stress/abi_encoding_stress.fe:19:9
   │
19 │         my_u16s: u16[255]
   │         ^^^^^^^^^^^^^^^^^ u16[255]

note: 
   ┌─ stress/abi_encoding_stress.fe:20:9
   │
20 │         my_bool: bool
   │         ^^^^^^^^^^^^^ bool

note: 
   ┌─ stress/abi_encoding_stress.fe:21:9
   │
21 │         my_bytes: u8[100]
   │         ^^^^^^^^^^^^^^^^^ u8[100]

note: 
   ┌─ stress/abi_encoding_stress.fe:23:5
   │  
23 │ ╭     pub fn set_my_addrs(self, my_addrs: address[5]):
24 │ │         self.my_addrs = my_addrs
   │ ╰────────────────────────────────^ attributes hash: 8230149271433625082
   │  
   = FunctionSignature {
         self_decl: Mutable,
         params: [
             FunctionParam {
                 name: "my_addrs",
                 typ: Ok(
                     Array(
                         Array {
                             size: 5,
                             inner: Address,
                         },
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ stress/abi_encoding_stress.fe:26:5
   │  
26 │ ╭     pub fn get_my_addrs(self) -> address[5]:
27 │ │         return self.my_addrs.to_mem()
   │ ╰─────────────────────────────────────^ attributes hash: 14938423529265024589
   │  
   = FunctionSignature {
         self_decl: Mutable,
         params: [],
         return_type: Ok(
             Array(
                 Array {
                     size: 5,
                     inner: Address,
                 },
             ),
         ),
     }

note: 
   ┌─ stress/abi_encoding_stress.fe:29:5
   │  
29 │ ╭     pub fn set_my_u128(self, my_u128: u128):
30 │ │         self.my_u128 = my_u128
   │ ╰──────────────────────────────^ attributes hash: 9586494768459567014
   │  
   = FunctionSignature {
         self_decl: Mutable,
         params: [
             FunctionParam {
                 name: "my_u128",
                 typ: Ok(
                     Base(
                         Numeric(
                             U128,
                         ),
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ stress/abi_encoding_stress.fe:32:5
   │  
32 │ ╭     pub fn get_my_u128(self) -> u128:
33 │ │         return self.my_u128
   │ ╰───────────────────────────^ attributes hash: 1703680575433883116
   │  
   = FunctionSignature {
         self_decl: Mutable,
         params: [],
         return_type: Ok(
             Base(
                 Numeric(
                     U128,
                 ),
             ),
         ),
     }

note: 
   ┌─ stress/abi_encoding_stress.fe:35:5
   │  
35 │ ╭     pub fn set_my_string(self, my_string: String<10>):
36 │ │         self.my_string = my_string
   │ ╰──────────────────────────────────^ attributes hash: 12755746761294548533
   │  
   = FunctionSignature {
         self_decl: Mutable,
         params: [
             FunctionParam {
                 name: "my_string",
                 typ: Ok(
                     String(
                         FeString {
                             max_size: 10,
                         },
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ stress/abi_encoding_stress.fe:38:5
   │  
38 │ ╭     pub fn get_my_string(self) -> String<10>:
39 │ │         return self.my_string.to_mem()
   │ ╰──────────────────────────────────────^ attributes hash: 7751556256223364605
   │  
   = FunctionSignature {
         self_decl: Mutable,
         params: [],
         return_type: Ok(
             String(
                 FeString {
                     max_size: 10,
                 },
             ),
         ),
     }

note: 
   ┌─ stress/abi_encoding_stress.fe:41:5
   │  
41 │ ╭     pub fn set_my_u16s(self, my_u16s: u16[255]):
42 │ │         self.my_u16s = my_u16s
   │ ╰──────────────────────────────^ attributes hash: 15627129425342656114
   │  
   = FunctionSignature {
         self_decl: Mutable,
         params: [
             FunctionParam {
                 name: "my_u16s",
                 typ: Ok(
                     Array(
                         Array {
                             size: 255,
                             inner: Numeric(
                                 U16,
                             ),
                         },
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ stress/abi_encoding_stress.fe:44:5
   │  
44 │ ╭     pub fn get_my_u16s(self) -> u16[255]:
45 │ │         return self.my_u16s.to_mem()
   │ ╰────────────────────────────────────^ attributes hash: 1712184078290376685
   │  
   = FunctionSignature {
         self_decl: Mutable,
         params: [],
         return_type: Ok(
             Array(
                 Array {
                     size: 255,
                     inner: Numeric(
                         U16,
                     ),
                 },
             ),
         ),
     }

note: 
   ┌─ stress/abi_encoding_stress.fe:47:5
   │  
47 │ ╭     pub fn set_my_bool(self, my_bool: bool):
48 │ │         self.my_bool = my_bool
   │ ╰──────────────────────────────^ attributes hash: 6416448266362982339
   │  
   = FunctionSignature {
         self_decl: Mutable,
         params: [
             FunctionParam {
                 name: "my_bool",
                 typ: Ok(
                     Base(
                         Bool,
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ stress/abi_encoding_stress.fe:50:5
   │  
50 │ ╭     pub fn get_my_bool(self) -> bool:
51 │ │         return self.my_bool
   │ ╰───────────────────────────^ attributes hash: 4761504089579832229
   │  
   = FunctionSignature {
         self_decl: Mutable,
         params: [],
         return_type: Ok(
             Base(
                 Bool,
             ),
         ),
     }

note: 
   ┌─ stress/abi_encoding_stress.fe:53:5
   │  
53 │ ╭     pub fn set_my_bytes(self, my_bytes: u8[100]):
54 │ │         self.my_bytes = my_bytes
   │ ╰────────────────────────────────^ attributes hash: 5447714587686147158
   │  
   = FunctionSignature {
         self_decl: Mutable,
         params: [
             FunctionParam {
                 name: "my_bytes",
                 typ: Ok(
                     Array(
                         Array {
                             size: 100,
                             inner: Numeric(
                                 U8,
                             ),
                         },
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ stress/abi_encoding_stress.fe:56:5
   │  
56 │ ╭     pub fn get_my_bytes(self) -> u8[100]:
57 │ │         return self.my_bytes.to_mem()
   │ ╰─────────────────────────────────────^ attributes hash: 11897278640933106358
   │  
   = FunctionSignature {
         self_decl: Mutable,
         params: [],
         return_type: Ok(
             Array(
                 Array {
                     size: 100,
                     inner: Numeric(
                         U8,
                     ),
                 },
             ),
         ),
     }

note: 
   ┌─ stress/abi_encoding_stress.fe:59:5
   │  
59 │ ╭     pub fn get_my_struct() -> MyStruct:
60 │ │         return MyStruct(
61 │ │             my_num=42,
62 │ │             my_num2=u8(26),
63 │ │             my_bool=true,
64 │ │             my_addr=address(123456)
65 │ │         )
   │ ╰─────────^ attributes hash: 12792745713144811261
   │  
   = FunctionSignature {
         self_decl: None,
         params: [],
         return_type: Ok(
             Struct(
                 Struct {
                     name: "MyStruct",
                     id: StructId(
                         0,
                     ),
                     field_count: 4,
                 },
             ),
         ),
     }

note: 
   ┌─ stress/abi_encoding_stress.fe:67:5
   │  
67 │ ╭     pub fn mod_my_struct(my_struct: MyStruct) -> MyStruct:
68 │ │         my_struct.my_num = 12341234
69 │ │         my_struct.my_num2 = u8(42)
70 │ │         my_struct.my_bool = false
71 │ │         my_struct.my_addr = address(9999)
72 │ │         return my_struct
   │ ╰────────────────────────^ attributes hash: 6786804746141497115
   │  
   = FunctionSignature {
         self_decl: None,
         params: [
             FunctionParam {
                 name: "my_struct",
                 typ: Ok(
                     Struct(
                         Struct {
                             name: "MyStruct",
                             id: StructId(
                                 0,
                             ),
                             field_count: 4,
                         },
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Struct(
                 Struct {
                     name: "MyStruct",
                     id: StructId(
                         0,
                     ),
                     field_count: 4,
                 },
             ),
         ),
     }

note: 
   ┌─ stress/abi_encoding_stress.fe:74:5
   │  
74 │ ╭     pub fn emit_my_event(self):
75 │ │         emit MyEvent(
76 │ │             my_addrs=self.my_addrs.to_mem(),
77 │ │             my_u128=self.my_u128,
   · │
81 │ │             my_bytes=self.my_bytes.to_mem()
82 │ │         )
   │ ╰─────────^ attributes hash: 4369441865732737140
   │  
   = FunctionSignature {
         self_decl: Mutable,
         params: [],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ stress/abi_encoding_stress.fe:24:9
   │
24 │         self.my_addrs = my_addrs
   │         ^^^^^^^^^^^^^ address[5]: Storage { nonce: Some(0) } => None

note: 
   ┌─ stress/abi_encoding_stress.fe:24:25
   │
24 │         self.my_addrs = my_addrs
   │                         ^^^^^^^^ address[5]: Memory => None

note: 
   ┌─ stress/abi_encoding_stress.fe:27:16
   │
27 │         return self.my_addrs.to_mem()
   │                ^^^^^^^^^^^^^ address[5]: Storage { nonce: Some(0) } => None

note: 
   ┌─ stress/abi_encoding_stress.fe:27:16
   │
27 │         return self.my_addrs.to_mem()
   │                ^^^^^^^^^^^^^^^^^^^^^^ address[5]: Storage { nonce: Some(0) } => Some(Memory)

note: 
   ┌─ stress/abi_encoding_stress.fe:30:9
   │
30 │         self.my_u128 = my_u128
   │         ^^^^^^^^^^^^ u128: Storage { nonce: Some(1) } => None

note: 
   ┌─ stress/abi_encoding_stress.fe:30:24
   │
30 │         self.my_u128 = my_u128
   │                        ^^^^^^^ u128: Value => None

note: 
   ┌─ stress/abi_encoding_stress.fe:33:16
   │
33 │         return self.my_u128
   │                ^^^^^^^^^^^^ u128: Storage { nonce: Some(1) } => Some(Value)

note: 
   ┌─ stress/abi_encoding_stress.fe:36:9
   │
36 │         self.my_string = my_string
   │         ^^^^^^^^^^^^^^ String<10>: Storage { nonce: Some(2) } => None

note: 
   ┌─ stress/abi_encoding_stress.fe:36:26
   │
36 │         self.my_string = my_string
   │                          ^^^^^^^^^ String<10>: Memory => None

note: 
   ┌─ stress/abi_encoding_stress.fe:39:16
   │
39 │         return self.my_string.to_mem()
   │                ^^^^^^^^^^^^^^ String<10>: Storage { nonce: Some(2) } => None

note: 
   ┌─ stress/abi_encoding_stress.fe:39:16
   │
39 │         return self.my_string.to_mem()
   │                ^^^^^^^^^^^^^^^^^^^^^^^ String<10>: Storage { nonce: Some(2) } => Some(Memory)

note: 
   ┌─ stress/abi_encoding_stress.fe:42:9
   │
42 │         self.my_u16s = my_u16s
   │         ^^^^^^^^^^^^ u16[255]: Storage { nonce: Some(3) } => None

note: 
   ┌─ stress/abi_encoding_stress.fe:42:24
   │
42 │         self.my_u16s = my_u16s
   │                        ^^^^^^^ u16[255]: Memory => None

note: 
   ┌─ stress/abi_encoding_stress.fe:45:16
   │
45 │         return self.my_u16s.to_mem()
   │                ^^^^^^^^^^^^ u16[255]: Storage { nonce: Some(3) } => None

note: 
   ┌─ stress/abi_encoding_stress.fe:45:16
   │
45 │         return self.my_u16s.to_mem()
   │                ^^^^^^^^^^^^^^^^^^^^^ u16[255]: Storage { nonce: Some(3) } => Some(Memory)

note: 
   ┌─ stress/abi_encoding_stress.fe:48:9
   │
48 │         self.my_bool = my_bool
   │         ^^^^^^^^^^^^ bool: Storage { nonce: Some(4) } => None

note: 
   ┌─ stress/abi_encoding_stress.fe:48:24
   │
48 │         self.my_bool = my_bool
   │                        ^^^^^^^ bool: Value => None

note: 
   ┌─ stress/abi_encoding_stress.fe:51:16
   │
51 │         return self.my_bool
   │                ^^^^^^^^^^^^ bool: Storage { nonce: Some(4) } => Some(Value)

note: 
   ┌─ stress/abi_encoding_stress.fe:54:9
   │
54 │         self.my_bytes = my_bytes
   │         ^^^^^^^^^^^^^ u8[100]: Storage { nonce: Some(5) } => None

note: 
   ┌─ stress/abi_encoding_stress.fe:54:25
   │
54 │         self.my_bytes = my_bytes
   │                         ^^^^^^^^ u8[100]: Memory => None

note: 
   ┌─ stress/abi_encoding_stress.fe:57:16
   │
57 │         return self.my_bytes.to_mem()
   │                ^^^^^^^^^^^^^ u8[100]: Storage { nonce: Some(5) } => None

note: 
   ┌─ stress/abi_encoding_stress.fe:57:16
   │
57 │         return self.my_bytes.to_mem()
   │                ^^^^^^^^^^^^^^^^^^^^^^ u8[100]: Storage { nonce: Some(5) } => Some(Memory)

note: 
   ┌─ stress/abi_encoding_stress.fe:61:20
   │
61 │             my_num=42,
   │                    ^^ u256: Value => None

note: 
   ┌─ stress/abi_encoding_stress.fe:62:24
   │
62 │             my_num2=u8(26),
   │                        ^^ u8: Value => None

note: 
   ┌─ stress/abi_encoding_stress.fe:62:21
   │
62 │             my_num2=u8(26),
   │                     ^^^^^^ u8: Value => None

note: 
   ┌─ stress/abi_encoding_stress.fe:63:21
   │
63 │             my_bool=true,
   │                     ^^^^ bool: Value => None

note: 
   ┌─ stress/abi_encoding_stress.fe:64:29
   │
64 │             my_addr=address(123456)
   │                             ^^^^^^ u256: Value => None

note: 
   ┌─ stress/abi_encoding_stress.fe:64:21
   │
64 │             my_addr=address(123456)
   │                     ^^^^^^^^^^^^^^^ address: Value => None

note: 
   ┌─ stress/abi_encoding_stress.fe:60:16
   │  
60 │           return MyStruct(
   │ ╭────────────────^
61 │ │             my_num=42,
62 │ │             my_num2=u8(26),
63 │ │             my_bool=true,
64 │ │             my_addr=address(123456)
65 │ │         )
   │ ╰─────────^ MyStruct: Memory => None

note: 
   ┌─ stress/abi_encoding_stress.fe:68:9
   │
68 │         my_struct.my_num = 12341234
   │         ^^^^^^^^^ MyStruct: Memory => None

note: 
   ┌─ stress/abi_encoding_stress.fe:68:9
   │
68 │         my_struct.my_num = 12341234
   │         ^^^^^^^^^^^^^^^^ u256: Memory => None

note: 
   ┌─ stress/abi_encoding_stress.fe:68:28
   │
68 │         my_struct.my_num = 12341234
   │                            ^^^^^^^^ u256: Value => None

note: 
   ┌─ stress/abi_encoding_stress.fe:69:9
   │
69 │         my_struct.my_num2 = u8(42)
   │         ^^^^^^^^^ MyStruct: Memory => None

note: 
   ┌─ stress/abi_encoding_stress.fe:69:9
   │
69 │         my_struct.my_num2 = u8(42)
   │         ^^^^^^^^^^^^^^^^^ u8: Memory => None

note: 
   ┌─ stress/abi_encoding_stress.fe:69:32
   │
69 │         my_struct.my_num2 = u8(42)
   │                                ^^ u8: Value => None

note: 
   ┌─ stress/abi_encoding_stress.fe:69:29
   │
69 │         my_struct.my_num2 = u8(42)
   │                             ^^^^^^ u8: Value => None

note: 
   ┌─ stress/abi_encoding_stress.fe:70:9
   │
70 │         my_struct.my_bool = false
   │         ^^^^^^^^^ MyStruct: Memory => None

note: 
   ┌─ stress/abi_encoding_stress.fe:70:9
   │
70 │         my_struct.my_bool = false
   │         ^^^^^^^^^^^^^^^^^ bool: Memory => None

note: 
   ┌─ stress/abi_encoding_stress.fe:70:29
   │
70 │         my_struct.my_bool = false
   │                             ^^^^^ bool: Value => None

note: 
   ┌─ stress/abi_encoding_stress.fe:71:9
   │
71 │         my_struct.my_addr = address(9999)
   │         ^^^^^^^^^ MyStruct: Memory => None

note: 
   ┌─ stress/abi_encoding_stress.fe:71:9
   │
71 │         my_struct.my_addr = address(9999)
   │         ^^^^^^^^^^^^^^^^^ address: Memory => None

note: 
   ┌─ stress/abi_encoding_stress.fe:71:37
   │
71 │         my_struct.my_addr = address(9999)
   │                                     ^^^^ u256: Value => None

note: 
   ┌─ stress/abi_encoding_stress.fe:71:29
   │
71 │         my_struct.my_addr = address(9999)
   │                             ^^^^^^^^^^^^^ address: Value => None

note: 
   ┌─ stress/abi_encoding_stress.fe:72:16
   │
72 │         return my_struct
   │                ^^^^^^^^^ MyStruct: Memory => None

note: 
   ┌─ stress/abi_encoding_stress.fe:76:22
   │
76 │             my_addrs=self.my_addrs.to_mem(),
   │                      ^^^^^^^^^^^^^ address[5]: Storage { nonce: Some(0) } => None

note: 
   ┌─ stress/abi_encoding_stress.fe:76:22
   │
76 │             my_addrs=self.my_addrs.to_mem(),
   │                      ^^^^^^^^^^^^^^^^^^^^^^ address[5]: Storage { nonce: Some(0) } => Some(Memory)

note: 
   ┌─ stress/abi_encoding_stress.fe:77:21
   │
77 │             my_u128=self.my_u128,
   │                     ^^^^^^^^^^^^ u128: Storage { nonce: Some(1) } => Some(Value)

note: 
   ┌─ stress/abi_encoding_stress.fe:78:23
   │
78 │             my_string=self.my_string.to_mem(),
   │                       ^^^^^^^^^^^^^^ String<10>: Storage { nonce: Some(2) } => None

note: 
   ┌─ stress/abi_encoding_stress.fe:78:23
   │
78 │             my_string=self.my_string.to_mem(),
   │                       ^^^^^^^^^^^^^^^^^^^^^^^ String<10>: Storage { nonce: Some(2) } => Some(Memory)

note: 
   ┌─ stress/abi_encoding_stress.fe:79:21
   │
79 │             my_u16s=self.my_u16s.to_mem(),
   │                     ^^^^^^^^^^^^ u16[255]: Storage { nonce: Some(3) } => None

note: 
   ┌─ stress/abi_encoding_stress.fe:79:21
   │
79 │             my_u16s=self.my_u16s.to_mem(),
   │                     ^^^^^^^^^^^^^^^^^^^^^ u16[255]: Storage { nonce: Some(3) } => Some(Memory)

note: 
   ┌─ stress/abi_encoding_stress.fe:80:21
   │
80 │             my_bool=self.my_bool,
   │                     ^^^^^^^^^^^^ bool: Storage { nonce: Some(4) } => Some(Value)

note: 
   ┌─ stress/abi_encoding_stress.fe:81:22
   │
81 │             my_bytes=self.my_bytes.to_mem()
   │                      ^^^^^^^^^^^^^ u8[100]: Storage { nonce: Some(5) } => None

note: 
   ┌─ stress/abi_encoding_stress.fe:81:22
   │
81 │             my_bytes=self.my_bytes.to_mem()
   │                      ^^^^^^^^^^^^^^^^^^^^^^ u8[100]: Storage { nonce: Some(5) } => Some(Memory)

note: 
   ┌─ stress/abi_encoding_stress.fe:75:9
   │  
75 │ ╭         emit MyEvent(
76 │ │             my_addrs=self.my_addrs.to_mem(),
77 │ │             my_u128=self.my_u128,
78 │ │             my_string=self.my_string.to_mem(),
   · │
81 │ │             my_bytes=self.my_bytes.to_mem()
82 │ │         )
   │ ╰─────────^ attributes hash: 2185685122923697263
   │  
   = Event {
         name: "MyEvent",
         fields: [
             EventField {
                 name: "my_addrs",
                 typ: Ok(
                     Array(
                         Array {
                             size: 5,
                             inner: Address,
                         },
                     ),
                 ),
                 is_indexed: false,
             },
             EventField {
                 name: "my_u128",
                 typ: Ok(
                     Base(
                         Numeric(
                             U128,
                         ),
                     ),
                 ),
                 is_indexed: false,
             },
             EventField {
                 name: "my_string",
                 typ: Ok(
                     String(
                         FeString {
                             max_size: 10,
                         },
                     ),
                 ),
                 is_indexed: false,
             },
             EventField {
                 name: "my_u16s",
                 typ: Ok(
                     Array(
                         Array {
                             size: 255,
                             inner: Numeric(
                                 U16,
                             ),
                         },
                     ),
                 ),
                 is_indexed: false,
             },
             EventField {
                 name: "my_bool",
                 typ: Ok(
                     Base(
                         Bool,
                     ),
                 ),
                 is_indexed: false,
             },
             EventField {
                 name: "my_bytes",
                 typ: Ok(
                     Array(
                         Array {
                             size: 100,
                             inner: Numeric(
                                 U8,
                             ),
                         },
                     ),
                 ),
                 is_indexed: false,
             },
         ],
     }

note: 
   ┌─ stress/abi_encoding_stress.fe:27:16
   │
27 │         return self.my_addrs.to_mem()
   │                ^^^^^^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
   │
   = ValueAttribute

note: 
   ┌─ stress/abi_encoding_stress.fe:39:16
   │
39 │         return self.my_string.to_mem()
   │                ^^^^^^^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
   │
   = ValueAttribute

note: 
   ┌─ stress/abi_encoding_stress.fe:45:16
   │
45 │         return self.my_u16s.to_mem()
   │                ^^^^^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
   │
   = ValueAttribute

note: 
   ┌─ stress/abi_encoding_stress.fe:57:16
   │
57 │         return self.my_bytes.to_mem()
   │                ^^^^^^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
   │
   = ValueAttribute

note: 
   ┌─ stress/abi_encoding_stress.fe:60:16
   │
60 │         return MyStruct(
   │                ^^^^^^^^ attributes hash: 9455737928596384977
   │
   = TypeConstructor {
         typ: Struct(
             Struct {
                 name: "MyStruct",
                 id: StructId(
                     0,
                 ),
                 field_count: 4,
             },
         ),
     }

note: 
   ┌─ stress/abi_encoding_stress.fe:62:21
   │
62 │             my_num2=u8(26),
   │                     ^^ attributes hash: 4311289215688173045
   │
   = TypeConstructor {
         typ: Base(
             Numeric(
                 U8,
             ),
         ),
     }

note: 
   ┌─ stress/abi_encoding_stress.fe:64:21
   │
64 │             my_addr=address(123456)
   │                     ^^^^^^^ attributes hash: 14203407709342965641
   │
   = TypeConstructor {
         typ: Base(
             Address,
         ),
     }

note: 
   ┌─ stress/abi_encoding_stress.fe:69:29
   │
69 │         my_struct.my_num2 = u8(42)
   │                             ^^ attributes hash: 4311289215688173045
   │
   = TypeConstructor {
         typ: Base(
             Numeric(
                 U8,
             ),
         ),
     }

note: 
   ┌─ stress/abi_encoding_stress.fe:71:29
   │
71 │         my_struct.my_addr = address(9999)
   │                             ^^^^^^^ attributes hash: 14203407709342965641
   │
   = TypeConstructor {
         typ: Base(
             Address,
         ),
     }

note: 
   ┌─ stress/abi_encoding_stress.fe:76:22
   │
76 │             my_addrs=self.my_addrs.to_mem(),
   │                      ^^^^^^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
   │
   = ValueAttribute

note: 
   ┌─ stress/abi_encoding_stress.fe:78:23
   │
78 │             my_string=self.my_string.to_mem(),
   │                       ^^^^^^^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
   │
   = ValueAttribute

note: 
   ┌─ stress/abi_encoding_stress.fe:79:21
   │
79 │             my_u16s=self.my_u16s.to_mem(),
   │                     ^^^^^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
   │
   = ValueAttribute

note: 
   ┌─ stress/abi_encoding_stress.fe:81:22
   │
81 │             my_bytes=self.my_bytes.to_mem()
   │                      ^^^^^^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
   │
   = ValueAttribute


