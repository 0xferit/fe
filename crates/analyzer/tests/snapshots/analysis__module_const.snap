---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(&files, module_id, &db)"

---
note: 
  ┌─ features/module_const.fe:1:1
  │
1 │ const C1: i32 = 1
  │ ^^^^^^^^^^^^^^^^^ i32

note: 
  ┌─ features/module_const.fe:2:1
  │
2 │ const C2: i32 = C1 * 3
  │ ^^^^^^^^^^^^^^^^^^^^^^ i32

note: 
  ┌─ features/module_const.fe:3:1
  │
3 │ const C3: i32 = C4 + 2
  │ ^^^^^^^^^^^^^^^^^^^^^^ i32

note: 
  ┌─ features/module_const.fe:4:1
  │
4 │ const C4: i32 = 42
  │ ^^^^^^^^^^^^^^^^^^ i32

note: 
   ┌─ features/module_const.fe:7:5
   │  
 7 │ ╭     fn bar() -> i32:
 8 │ │         const LOCAL_CONST: i32 = C3 * 2
 9 │ │         let _arr1: Array<i32, { C2 }>
10 │ │         let _arr2: Array<i32, { LOCAL_CONST }>
11 │ │         return C4
   │ ╰─────────────────^ attributes hash: 10625528290137096297
   │  
   = FunctionSignature {
         self_decl: None,
         params: [],
         return_type: Ok(
             Base(
                 Numeric(
                     I32,
                 ),
             ),
         ),
     }

note: 
   ┌─ features/module_const.fe:8:28
   │
 8 │         const LOCAL_CONST: i32 = C3 * 2
   │                            ^^^ i32
 9 │         let _arr1: Array<i32, { C2 }>
   │                    ^^^^^^^^^^^^^^^^^^ Array<i32, 3>
10 │         let _arr2: Array<i32, { LOCAL_CONST }>
   │                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^ Array<i32, 88>

note: 
  ┌─ features/module_const.fe:8:34
  │
8 │         const LOCAL_CONST: i32 = C3 * 2
  │                                  ^^   ^ i32: Value
  │                                  │     
  │                                  i32: Value

note: 
   ┌─ features/module_const.fe:8:34
   │
 8 │         const LOCAL_CONST: i32 = C3 * 2
   │                                  ^^^^^^ i32: Value
 9 │         let _arr1: Array<i32, { C2 }>
   │                                 ^^ i32: Value
10 │         let _arr2: Array<i32, { LOCAL_CONST }>
   │                                 ^^^^^^^^^^^ i32: Value
11 │         return C4
   │                ^^ i32: Value


