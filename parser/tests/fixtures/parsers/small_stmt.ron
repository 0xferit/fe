return
assert x
emit Foo()
pass
break
continue
revert
x: bool = y
x = y
x += y
x
---
[
  Node(
    kind: Return(
      value: None,
    ),
    span: Span(
      start: 0,
      end: 6,
    ),
  ),
  Node(
    kind: Assert(
      test: Node(
        kind: Name("x"),
        span: Span(
          start: 14,
          end: 15,
        ),
      ),
      msg: None,
    ),
    span: Span(
      start: 7,
      end: 15,
    ),
  ),
  Node(
    kind: Emit(
      name: Node(
        kind: "Foo",
        span: Span(
          start: 21,
          end: 24,
        ),
      ),
      args: Node(
        kind: [],
        span: Span(
          start: 24,
          end: 26,
        ),
      ),
    ),
    span: Span(
      start: 16,
      end: 26,
    ),
  ),
  Node(
    kind: Pass,
    span: Span(
      start: 27,
      end: 31,
    ),
  ),
  Node(
    kind: Break,
    span: Span(
      start: 32,
      end: 37,
    ),
  ),
  Node(
    kind: Continue,
    span: Span(
      start: 38,
      end: 46,
    ),
  ),
  Node(
    kind: Revert,
    span: Span(
      start: 47,
      end: 53,
    ),
  ),
  Node(
    kind: VarDecl(
      target: Node(
        kind: Name("x"),
        span: Span(
          start: 54,
          end: 55,
        ),
      ),
      typ: Node(
        kind: Base(
          base: "bool",
        ),
        span: Span(
          start: 57,
          end: 61,
        ),
      ),
      value: Some(Node(
        kind: Name("y"),
        span: Span(
          start: 64,
          end: 65,
        ),
      )),
    ),
    span: Span(
      start: 54,
      end: 65,
    ),
  ),
  Node(
    kind: Assign(
      targets: [
        Node(
          kind: Name("x"),
          span: Span(
            start: 66,
            end: 67,
          ),
        ),
      ],
      value: Node(
        kind: Name("y"),
        span: Span(
          start: 70,
          end: 71,
        ),
      ),
    ),
    span: Span(
      start: 66,
      end: 71,
    ),
  ),
  Node(
    kind: AugAssign(
      target: Node(
        kind: Name("x"),
        span: Span(
          start: 72,
          end: 73,
        ),
      ),
      op: Node(
        kind: Add,
        span: Span(
          start: 74,
          end: 76,
        ),
      ),
      value: Node(
        kind: Name("y"),
        span: Span(
          start: 77,
          end: 78,
        ),
      ),
    ),
    span: Span(
      start: 72,
      end: 78,
    ),
  ),
  Node(
    kind: Expr(
      value: Node(
        kind: Name("x"),
        span: Span(
          start: 79,
          end: 80,
        ),
      ),
    ),
    span: Span(
      start: 79,
      end: 80,
    ),
  ),
]
